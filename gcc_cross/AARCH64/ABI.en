AARCH64(ARM64) ABI

(*1) Function call
(*2) Return from function
(*3) Prologue
(*4) Epilogue
(*5) Normal argument and return value
(*6) `long long' argument and return value
(*7) Floating point number argument and return value
(*8) Structure argument and return value

(*1) Function call

	bl func

	Pseudo code

	x30 = (`bl' instruction next address)
	pc = func

	x30 works as link register.

(*2) Return from function

        ret

	Pseudo code

	pc = x30
	
(*3) Prologue

        For the function which uses 128 bytes local area, prologue becomes
	like below:

	stp	x29, x30, [sp, -144]!
	add	x29, sp, 128

	+--------------------+ <- sp_{new}
	|                    |
	|                    |
	|                    |
	|                    |
	|                    |
	|                    |
	|                    |
	+--------------------+ <- x29_{new}
	|      x29_{old}     |
	+--------------------+ +8
	|      x30_{old}     |
	+--------------------+ <- sp_{old}

	x29 is used as frame pointer. sp is alias of x31.

(*4) Epilogue

        For the function which uses 128 bytes local area, epilogue becomes
	like below:
	
	ldp	x29, x30, [sp], 144
	ret

(*5) Normal argument and return value

        1st : w0
	2nd : w1
	...
	8th : w7
	9th : use stack

	For example,

        int f(int a0, int a1, int a2, int a3, int a4, int a5, int a6, int a7,
              int a8, int a9);


	f(10, 11, 12, 13, 14, 15, 16, 17, 18, 19);

	At stop at `f', the stack layout becomes like below:

	+--------------------+ <- sp
	|         18         |
	+--------------------+  +8
	|         19         |
	+--------------------+  +16

	And registers are set like below:
	
	w0 = 10, w1 = 11, w2 = 12, w3 = 13, w4 = 14, w5 = 15, w6 = 16, w7 = 17
	
	return value : w0

(*6) `long long' argument and return value

        sizeof(long long) = 8

        Use x0, ..., x7 instead of w0, ..., w7

	x0 lower 32 bit is w0.

(*7) Floating point number argument and return value

        sizeof(float) = 4
	sizeof(double) = 8
        sizeof(long double) = 16

	For float type argument,

	1st : s0
	2nd : s1
	...
	8th : s7
	9th : use stack

	For double type argument, use d0, ..., d7 instead of s0, ..., s7.
	For long dobule type argument, use q0, ..., q7.

	Return value : s0, d0, q0 for respectively

(*8) Structure argument and return value

        When calling function which takes structure type argument,
	make copy of the argument and pass its address as a argument.
	with the rule (*6).
	When calling function which returns structure type argument,
	if the structure size is less than or equal to 16 bytes,
	the return value is set to `x0' and `x1'.
	Otherwise the address for the return value is set to `x8'.
