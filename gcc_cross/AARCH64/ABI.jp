AARCH64(ARM64) の ABI

(*1) 函数呼び出し
(*2) 函数復帰
(*3) プロローグ
(*4) エピローグ
(*5) 通常の函数の引数と戻り値
(*6) long long を引数にとる函数, 返す函数
(*7) 浮動少数点数を引数にとる函数, 返す函数
(*8) 構造体を引数にとる函数, 構造体を返す函数

(*1) 函数呼び出し

	bl func

	疑似コード

	x30 = (bl 命令の次のアドレス)
	pc = func

	x30 がリンクレジスタの役割りをしている.

(*2) 函数復帰

        ret

	疑似コード

	pc = x30
	
(*3) プロローグ

        以下は 128 バイトのローカル領域を使用する函数

	stp	x29, x30, [sp, -144]!
	mov	x29, sp

	+--------------------+ <- sp_{new}, x29_{new}
	|      x29_{old}     |
     +8 +--------------------+
	|      x30_{old}     |
    +16 +--------------------+
	|                    |
	|                    |
	|                    |
	|     local area     |
	|                    |
	|                    |
	|                    |
   +144 +--------------------+ <- sp_{old}

	x29 をフレームポインタとして使用している. sp は x31 の別名.

	void f(int a, int b){ ... } のような函数のプロローグで a と b
	をスタックに保存するとき以下のようにアドレスの高いほうから保存
	される.

	
	+--------------------+ <- sp_{new}, x29_{new}
	|      x29_{old}     |
     +8 +--------------------+
	|      x30_{old}     |
    +16 +--------------------+
	|                    |
	|                    |
        ~                    ~
	|                    |
	|                    |
        +--------------------+
	|  2nd argument(b)   |
        +--------------------+
	|  1st argument(a)   |
        +--------------------+ <- sp_{old}

(*4) エピローグ

        以下は 128 バイトのローカル領域を使用する函数

	ldp	x29, x30, [sp], 144
	ret

(*5) 通常の函数の引数と戻り値

        第 1 引数 : w0
	第 2 引数 : w1
	...
	第 8 引数 : w7
	第 9 引数以降 : スタックを使用する.


        int f(int a0, int a1, int a2, int a3, int a4, int a5, int a6, int a7,
              int a8, int a9);

        を

	f(10, 11, 12, 13, 14, 15, 16, 17, 18, 19);

	として呼び出したとき f の先頭アドレスでは

	w0 = 10, w1 = 11, w2 = 12, w3 = 13, w4 = 14, w5 = 15, w6 = 16, w7 = 17

	となっていてスタックは以下のようになっている.

	+--------------------+ <- sp
	|         18         |
	+--------------------+  +8
	|         19         |
	+--------------------+  +16
	

	戻り値は w0 を使用する.

(*6) long long を引数にとる函数, 返す函数

        sizeof(long long) = 8

        w0, ..., w7 の代りに x0, ..., x7 が使用される.

	x0 の下位 32 ビットが w0 のこと.

(*7) float, double を引数にとる函数, 返す函数

        sizeof(float) = 4
	sizeof(double) = 8
        sizeof(long double) = 16

	float の引数に対しては

	第 1 引数 : s0
	第 2 引数 : s1
	...
	第 8 引数 : s7
	第 9 引数以降 : スタックを使用する.

	double の引数に対しては s0, ..., s7 の代わりに d0, ..., d7 が使用される.
	long double の引数に対しては q0, ..., q7 が使用される.

	戻り値はそれぞれ s0, d0, q0 が使用される.

(*8) 構造体を引数にとる函数, 構造体を返す函数

        構造体を引数に取る函数を呼び出すときサイズが 16 バイト以下ならば x0, x1 レジスタ
	が使用される. 16 バイトより大きければコピーが作成されコピーの先頭アドレスが
	引数として渡される. このとき (*6) の規則が適用される.

	構造体を返す函数を呼び出すとき, 構造体が 16 バイト以内ならば戻り値が x0, x1
	にセットされる. 構造体が 16 バイトより大きければ戻り値を格納するアドレスを x8
	にセットして呼び出す.
