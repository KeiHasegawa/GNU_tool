MCORE cross compile environment

(*1) MCORE
(*2) Install with script
(*3) Verification => NG

(*1) MCORE

https://www.arch.cs.titech.ac.jp/mcore/index.html

(*2) Install with script

Use the same script with "IQ2000":

set TARGET = mcore-elf   # Change

(*3) Verification => NG

% mcore-elf-gcc -g -o hello.elf hello.c
/media/8492805f-d30e-493d-8911-503c83a1d4ab/work/GNU_LANG/lib/gcc/mcore-elf/10.2.0/../../../../mcore-elf/bin/ld: /media/8492805f-d30e-493d-8911-503c83a1d4ab/work/GNU_LANG/lib/gcc/mcore-elf/10.2.0/../../../../mcore-elf/lib/libc.a(lib_a-isattyr.o): in function `_isatty_r':
/media/8492805f-d30e-493d-8911-503c83a1d4ab/work/GNU_LANG/newlib-4.1.0.mcore-elf/mcore-elf/newlib/libc/reent/../../../.././newlib/libc/reent/isattyr.c:55: undefined reference to `_isatty'
collect2: error: ld terminated status 1
%

newlib-4.1.0.mcore-elf/newlib/libc/syscalls/sysisatty.c

was fixed like below

#define REENTRANT_SYSCALLS_PROVIDED    // Add this

int
isatty (int fd)
{
#ifdef REENTRANT_SYSCALLS_PROVIDED
  return _isatty_r (_REENT, fd);
#else
  return _isatty (fd);
#endif
}

% mcore-elf-gcc -g -o hello.elf hello.c

OK. hello.elf was generated.


% mcore-elf-gdb hello.elf
...
arch-utils.c:693: internal-error: initialize_current_architecture: Selection of initial architecture failed
A problem internal to GDB has been detected,
further debugging may prove unreliable.
Quit this debugging session? (y or n) Segmentation fault
%

By using gdb, I confirmed that mcore-elf-gdb accessed address 0
at below function:

void
serial_event_clear (struct serial_event *event)
{
  struct serial *ser = (struct serial *) event;
#ifndef USE_WIN32API
  int r;

  do
    {
      char c;

      r = read (ser->fd, &c, 1);
    }
  while (r > 0 || (r < 0 && errno == EINTR));

Above is the direct reason for segmentation fault.
But before this error, the below  message was displayed:

arch-utils.c:693: internal-error: initialize_current_architecture: Selection of initial architecture failed
A problem internal to GDB has been detected,
further debugging may prove unreliable.
Quit this debugging session? (y or n) 

Maybe, the interface between gdb and mcore simulator was not good.

I executed like below:

(gdb) b arch-utils.c:693

  if (! gdbarch_update_p (info))
    internal_error (__FILE__, __LINE__,
		    _("initialize_current_architecture: Selection of "
		      "initial architecture failed"));

(gdb) ptype gdbarch_update_p
type = int (gdbarch_info)

According to above, `gdbarch_update_p' returned 0.

At `gdbarch_update_p', `gdbarch_find_by_info' is called and
it returned 0. As a result, `gdbarch_update_p' returned 0.

  for (rego = gdbarch_registry;
       rego != NULL;
       rego = rego->next)
    if (rego->bfd_architecture == info.bfd_arch_info->arch)
      break;
  if (rego == NULL)

`gdbarch_registry' is 0. And this is set at

gdbarch_register

But, this function was not called.

In case of `h8300', `gdbarch_register' was called like below:

void
_initialize_h8300_tdep ()
{
  register_gdbarch_init (bfd_arch_h8300, h8300_gdbarch_init);
}

which is defined at

gdb-10.2.h8300-elf/gdb/h8300-tdep.c

But the corresponding file

gdb-10.2.mcore-elf/gdb/mcore-tdep.c

does not exsit. I thoght it was difficult to fix this immediately.

