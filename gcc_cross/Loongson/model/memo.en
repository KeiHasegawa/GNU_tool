cc1 model

Refer to "AARCH64" => "cc1 model" => "Memo".
In similar way, cc1 model of Loonson can be built.

Development note:

(*1)
At this point, hello world 11 program could be executed with
loongarch64-elf-run. And now for every rtx_insn* insn generated at
loongarch64::expand_prologue(), added property like below:

  RTX_FRAME_RELATED_P(insn) = true;

Then I executed hello world 11 program under control of loongarch64-elf-gdb
like below:

% loongarch64-elf-gdb a.elf -x gdbcom.2 -q
...
Connected to the simulator.
Loading section .text, size 0xbc lma 100
Loading section .got, size 0x20 lma 1d0
Loading section .rodata, size 0x10 lma 1bc
Start address 100
Transfer rate: 1888 bits in <1 sec.
Breakpoint 1 at 0x18c: file a.c, line 10.

Breakpoint 1, main () at a.c:10
10	  printf("hello world %d\n", f(5, 6));
f (a=5, b=6) at a.c:5
5	  return a + b;
#0  f (a=5, b=6) at a.c:5
#1  0x0000000000000198 in main () at a.c:10
(loongarch64-elf-gdb) finish
Run till exit from #0  f (a=5, b=6) at a.c:5
gdbarch.c:2646: internal-error: gdbarch_return_value: Assertion `gdbarch->return_value != NULL' failed.
...
%

`finish' command failed for some reason. I guessed that there was a problem
with `loongarch-tdep.c'.

I fixed `loongarch-tdep.c' and confirmed that hello world 11 generated by my
`cc1' could be executed under control of loongarch64-elf-gdb.

