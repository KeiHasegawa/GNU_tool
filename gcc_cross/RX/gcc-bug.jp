rx-elf-gcc の内部コンパイルエラーの調査

dwarf2cfi.c で gcc_assert で失敗していたので, とりあえず dwarf2cfi.c を

-g3 -O0

でコンパイルし直した. そして実行してみると

gcc-10.2.0.rx-elf/gcc/dwarf2cfi.c:

static void
dwarf2out_frame_debug_adjust_cfa (rtx pat)
{
...
      gcc_assert (dwf_regno (XEXP (src, 0)) == cur_cfa->reg);

この gcc_assert で失敗している.

(gdb) p XEXP (src, 0)
$6 = (rtx) 0xb7855050
(gdb) p dwf_regno (XEXP (src, 0))
$7 = 0
(gdb) p cur_cfa->reg
$8 = 6
(gdb)

のようになっている.

(gdb) b dwarf2cfi.c:1189
(gdb) run -quiet a.c -quiet -dumpbase a.c -auxbase a -o a.s -g
...
(gdb) up
#1  0x0831a3c9 in dwarf2out_frame_debug (insn=0xb785e5c4) at ../.././gcc/dwarf2cfi.c:2098
(gdb) p debug_insn_slim(insn)
   27: {r6:SI=[r0:SI];r0:SI=r0:SI+0x4;}
      REG_CFA_RESTORE r6:SI
      REG_CFA_ADJUST_CFA r0:SI=r0:SI+0x4
$1 = void
(gdb) 

これはエピローグの部分で debug_frame を出そうとしているらしい.

gcc-10.2.0.rx-elf/gcc/config/rx/rx.c

void
rx_expand_epilogue (bool is_sibcall)
{
...


(gdb) b rx_expand_epilogue
(gdb) run
...


static void
add_pop_cfi_notes (rtx_insn *insn, unsigned int high, unsigned int low)
{
  rtx t = plus_constant (Pmode, stack_pointer_rtx,
                        (high - low + 1) * UNITS_PER_WORD);
  t = gen_rtx_SET (stack_pointer_rtx, t);
  add_reg_note (insn, REG_CFA_ADJUST_CFA, t);
  RTX_FRAME_RELATED_P (insn) = 1;                      これ

函数名から察すると意図的にやっているのは間違いないが, これが原因.
この修正パッチを rx.diff としてアップロードしておいた.

この修正には fprintf の long が期待される引数に long long が指定されている修正も
含まれている.




