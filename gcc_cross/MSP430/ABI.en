MSP430 ABI

(*1) Function call
(*2) Return from function
(*3) Prologue
(*4) Epilogue
(*5) Normal argument and return value
(*6) `long', `long long' argument and return value
(*7) Floating point number argument and return value
(*8) Structure argument and return value

(*1) Function call

	CALL	#func

	Pseudo code

	sp -= 2
	memory[sp] = (`CALL' instruction next address)
	pc = func

(*2) Return from function

	RET

	Pseudo code

	pc = memory[sp]
	sp += 2;

(*3) Prologue

	PUSHM.W	#3, R10     ; Optional
	SUB.W	#128, R1

	Above is porlogue for the function which uses 128 bytes local area.
	If this function uses R8, R9 and R10, save them by `PUSHM' instruction.

(*4) Epilogue

	ADD.W	#128, R1
	POPM.W	#3, r10     ; Optional.
	RET

	Above is epilogue for the function which uses 128 bytes local area.
	R1 is restored and return to calle. `POPM' is genereated
	if `PUSHM' is generated at (*3).

(*5) Normal argument and return value

	1st : R12
	2nd : R13
	3rd : R14
	4th : R15
	5th : use stack

	For example,

	int f(int a0, int a1, int a2, int a3, int a4, int a5);

	f(10, 11, 12, 13, 14, 15);

	At the start address of `f', registers and stack layout becomes
	like below:

	R12 = 10, R13 = 11, R14 = 12, R15 = 13
	
	+----------------------+ <- sp
	|    return address    |
	+----------------------+ +2
	|          14          |
	+----------------------+ +4
	|          15          |
	+----------------------+ +6

	Function return value is set to R12.

(*6) long, long long を引数にとる函数, 返す函数

	sizeof(long) = 4
	sizeof(long long) = 8

	For `long' type argument, 2 registers are used and for the rest,
	use stack.
	For example,

	long f(int a0, long a1, long a2);
	
	f(0x1234, 0x56789abcL, 0xddeeff00L);

	At the start adddress of `f', registers and stack layout becomes
	like below:

        r12 = 0x1234, r13 = 0x9abc, r14 = 0x5678, 15= 0xff00

	+----------------------+ <- sp
	|    return address    |
	+----------------------+ +2
	|       0xddee         |
	+----------------------+ +4

	Function return value is set to R12 and R13.

	For 1st `long long' type argumet, R12, R13, R14 and R15 are used.
	otherwise, use stack.
	
	For example,

	long long f(int, long long);

	f(5, 0x123456789abcdef0LL);

	At the start address of `f', register and stack layout becomes
	like below:

	R12 = 5

	+----------------------+ <- sp
	|    return address    |	
	+----------------------+ +2
	|        0xdef0        |
	+----------------------+ +4
	|        0x9abc        |
	+----------------------+ +6
	|        0x5678        |
	+----------------------+ +8
	|        0x1234        |
	+----------------------+ +10

(*7) Floating point number argument and return value

	sizeof(float) = 4
	sizeof(double) = sizeof(long double) = 8

	MSP430 doesn't have FPU so software calculate floating point nubmer
	operation.
	For `float' same with (*5), For `double' and `long double' same
	with (*6).
	
(*8) Structure argument and return value

        When calling the function which takes structure type argument,
	the address of the structure is passed according to (*5).
	When calling the function which returns struct type, R12 is set
	to the addresss for the return value.
