CompactRISC の setjmp では setjmp を呼び出した時点での 

r7, r8, r9, r10, r11, r12, r13(fp), r14(ra), r15(sp)

を保存することになる. r12, r13, r14, r15 には 2 バイトではなく 4 バイト必要
になることから sizeof(int) = 2 であることに留意すると

typedef int jmp_buf[5 + 4 * 2];

かそれよりも大きいエリアを確保する必要がある. setjmp の疑似コードは以
下になる:

int setjmp(int* p)
{
  p[0] = r7;
  p[1] = r8;
  p[2] = r9;
  p[3] = r10;
  p[4] = r11;
  uint32_t* q = (uint32_t*)(p + 5);
  q[0] = r12;
  q[1] = r13;
  q[2] = r14;
  q[3] = r15
  return 0;
}

後はこれをアセンブラで書けばよい. longjmp の疑似コードは以下になる:

int longjmp(int* p, int n)
{
  r7 = p[0];
  r8 = p[1]
  r9 = p[2];
  r10 = p[3];
  r11 = p[4]
  uint32_t* q = (uint32_t*)(p+5);
  r12 = q[0];
  r13 = q[1];
  r14 = q[2];
  r15 = q[3];
  if (!n)
    n = 1;
  r4 = n;
  r14(ra) へジャンプ;
}
