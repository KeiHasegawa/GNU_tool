修正メモ

ft32-elf-as で行番号情報の修正を行なったが ft32-elf-ld で正しく実行ファイルを生成で
きていない.

DW_LINE_set_address = 2

をどこかで出しているはず.

write にブレークポイントをセットしてみたが, セクションを変更した後まとめて出力するような
プログラムなのでこれではうまく調査できていない.

むしろ read

b bfd_get_section_contents

でブレークポイントにヒットして section->name = ".debug_line" になっている.

(gdb) x/74bx contents
0x81acfd8:	0x00	0x00	0x00	0x00	0x03	0x00	0x00	0x00
0x81acfe0:	0x00	0x00	0x01	0x01	0xfb	0x0e	0x0d	0x00
0x81acfe8:	0x01	0x01	0x01	0x01	0x00	0x00	0x00	0x01
0x81acff0:	0x00	0x00	0x01	0x00	0x74	0x65	0x73	0x74
0x81acff8:	0x30	0x30	0x30	0x2e	0x53	0x00	0x00	0x00
0x81ad000:	0x00	0x00	0x00	0x05	0x02	0x00	0x00	0x00
0x81ad008:	0x00	0x14	0x03	0x01	0x09	0x00	0x00	0x01
0x81ad010:	0x03	0x01	0x09	0x00	0x00	0x01	0x03	0x02
0x81ad018:	0x09	0x00	0x00	0x01	0x09	0x00	0x00	0x00
0x81ad020:	0x01	0x01
(gdb) info b
Num     Type           Disp Enb Address    What
1       breakpoint     keep y   0xb7f2bce0 ../sysdeps/unix/syscall-template.S:82
7       breakpoint     keep y   0x08082080 in bfd_get_section_contents at section.c:1564
	breakpoint already hit 8 times
9       breakpoint     keep y   0x0807a2b0 in bfd_getb32 at libbfd.c:631
(gdb) c
Continuing.

Breakpoint 7, bfd_get_section_contents (abfd=0x817f468, section=0x818cb9c, location=0x81acfd8, offset=0, count=38) at section.c:1564
(gdb) x/74bx 0x81acfd8
0x81acfd8:	0x46	0x00	0x00	0x00	0x03	0x00	0x2a	0x00
0x81acfe0:	0x00	0x00	0x01	0x01	0xfb	0x0e	0x0d	0x00
0x81acfe8:	0x01	0x01	0x01	0x01	0x00	0x00	0x00	0x01
0x81acff0:	0x00	0x00	0x01	0x00	0x74	0x65	0x73	0x74
0x81acff8:	0x30	0x30	0x30	0x2e	0x53	0x00	0x00	0x00
0x81ad000:	0x00	0x00	0x00	0x05	0x02	0x00	0x01	0x00
0x81ad008:	0x00	0x14	0x03	0x01	0x09	0x04	0x01	0x01
0x81ad010:	0x03	0x01	0x09	0x04	0x01	0x01	0x03	0x02
0x81ad018:	0x09	0x04	0x01	0x01	0x09	0x10	0x01	0x00
0x81ad020:	0x01	0x01
(gdb) 

bfd_get_section_contents

で読み込んこんだ .debug_line を変更している. .debug_line セクション

bfd_boolean
bfd_get_section_contents (bfd *abfd,
			  sec_ptr section,
			  void *location,
			  file_ptr offset,
			  bfd_size_type count)
{
  bfd_size_type sz;

  if (strcmp(section->name, ".debug_line") == 0) {
    if (count > 12)
      asm("int3");
  }

のようにすれば問題の瞬間を捉えやすい.
