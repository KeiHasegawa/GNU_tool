IQ2000 の ABI

(*1) 函数呼び出し
(*2) 函数復帰
(*3) プロローグ
(*4) エピローグ
(*5) 通常の函数の引数と戻り値
(*6) long long を引数にとる函数, 返す函数
(*7) 浮動少数点数を引数にとる函数, 返す函数
(*8) 構造体を引数にとる函数, 構造体を返す函数


(*1) 函数呼び出し

	jalr	%31,%3

	疑似コード

	r31 = (jalr 命令の次の次のアドレス)
	pc = r3

	r31 はリンクレジスタとして使用されるが, コンパイラがどのレジスタをリンクレジスタ
	として使用するかは選択できる.
        この命令は遅延分岐なので r31 には次の次のアドレスがセットされる.

(*2) 函数復帰

	j	%31

	この命令も遅延分岐である.

(*3) プロローグ

	addiu	%29,%29,-136
	sw	%31,132(%29)
	sw	%27,128(%29)
	or	%27,%0,%29

	上は 128 バイトのローカルエリアを使用する函数のプロローグである.

	+------------------+ <- r29_{new}, r27_{new}
	|                  |
	|                  |
	|    local area    |
	|                  |
	|                  |
	+------------------+ <- r27 はここではない
	|     r27_{old}    |
	+------------------+
	|     r31_{old}    |
	+------------------+

	r27 をフレームポインタとして使用しているが, 指しているところが
	(この時点では) r29 と同じになっている.

(*4) エピローグ

	or	%29,%0,%27
	lw	%31,132(%29)
	lw	%27,128(%29)
	nop
	addiu	%29,%29,136
	j	%31
	nop

	上は 128 バイトのローカルエリアを使用する函数のエピローグである.
	r31, r27, r29 が復元されて呼び出し元に復帰する.
	
(*5) 通常の函数の引数と戻り値	

        第 1 引数 : r4
        第 2 引数 : r5
	...
        第 8 引数 : r11
        第 9 引数以降 : スタックに積む

	int f(int a0, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8);

	f(10, 11, 12, 13, 14, 15, 16, 17, 18);

	に対して f の先頭では

	r4 = 10, ..., r11 = 17

	+------------------+ <- r29
	|        18        |
	+------------------+

	のようになっている.
	函数の戻り値は r2 レジスタにセットされる.

(*6) long long を引数にとる函数, 返す函数

        sizeof(long long) = 8

	第 1 引数が long long の場合 r4, r5 がペアとして使われる.
	同様に第 2 引数が long long の場合 r6, r7 がペアとして使われる.
	第 3 引数は r8, r9 が, 第 4 引数は r10, r11 がペアとして使われる.
	残りはスタックに積まれる.

	long long f(int a0, long long a1, long long a2, long long a3, long long a4);

	f(0x11223344,
	  0x123456789abcdef0LL, 0x5566778899aabbccLL,
	  0xddeeff0087654321LL, 0x0fedcba987654321LL);

	に対して f の先頭アドレスでは

	r4 = 0x11223344
	r6 = 0x12345678, r7 = 0x9abcdef0
	r8 = 0x55667788, r9 = 0x99aabbcc
	10 = 0xddeeff00, r11= 0x87654321

	+------------------+ <- r29
	|    0x0fedcba9    |
	+------------------+
	|    0x87654321    |
	+------------------+

	のようになっている.
	函数の戻り値は r2, r3 にセットされる.

(*7) 浮動少数点数を引数にとる函数, 返す函数

        sizeof(float) = 4
	sizeof(double) = 8
	sizeof(long double) = 8

	IQ2000 には FPU がないので浮動少数点演算はソフトウェアで行なう.
	float に対しては (*5) と同様. double, long double に対しては (*6) と同様.

(*8) 構造体を引数にとる函数, 構造体を返す函数

        構造体を引数にとる函数を呼び出すとき構造体のアドレスが函数に渡される.
	構造体を返す函数を呼び出すとき r4 レジスタに戻り値を格納する領域の
	アドレスがセットされて呼び出される.
