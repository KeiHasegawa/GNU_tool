IQ2000 ABI

(*1) Function call
(*2) Return from function
(*3) Prologue
(*4) Epilogue
(*5) Normal argument and return value
(*6) `long long' argument and return value
(*7) Floating point number argument and return value
(*8) Structure argument and return value


(*1) Function call

	jalr	%31,%3

	Pseudo code

	r31 = (`jalr' instruction next next address)
	pc = r3

	r31 is used as link register, but a compiler can chose link register.
	Thih instruction is delayed branch. So jalr instruction next next
	address is set to r31.

(*2) Return from function

	j	%31

	This instruction is also delayed branch.

(*3) Prologue

	addiu	%29,%29,-136
	sw	%31,132(%29)
	sw	%27,128(%29)
	or	%27,%0,%29

	Above is prologue for the function which uses 128 bytes local area.

	+------------------+ <- r29_{new}, r27_{new}
	|                  |
	|                  |
	|    local area    |
	|                  |
	|                  |
	+------------------+ <- r27 doesn't point here
	|     r27_{old}    |
	+------------------+
	|     r31_{old}    |
	+------------------+

	r27 is used as frame pointer but r27 points to the same address
	with r29 at this point.

(*4) Epilogue

	or	%29,%0,%27
	lw	%31,132(%29)
	lw	%27,128(%29)
	nop
	addiu	%29,%29,136
	j	%31
	nop

	Above is epilogue for the function which uses 128 bytes local area.
	r31, r27 and r29 are restored and reutn to callee.
	
(*5) Normal argument and return value

        1st : r4
        2nd : r5
	...
        8th : r11
        9th : use stack

	For exmaple,

	int f(int a0, int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8);

	f(10, 11, 12, 13, 14, 15, 16, 17, 18);

	At start addres of `f', registers and stack layout become like below:

	r4 = 10, ..., r11 = 17

	+------------------+ <- r29
	|        18        |
	+------------------+

	Function return value is set to r2.

(*6) `long long' argument and return value

        sizeof(long long) = 8

	If 1st argument type is `long long', r4 and r5 are used.
	Similarly if 2nd argument type is `long long', r6 and r7 are sued.
	If 3rd, r8 and r9 are used. If 4th, r10 and r11 are used.
	For the rest, stack is used.
	For example,

	long long f(int a0, long long a1, long long a2, long long a3, long long a4);

	f(0x11223344,
	  0x123456789abcdef0LL, 0x5566778899aabbccLL,
	  0xddeeff0087654321LL, 0x0fedcba987654321LL);

	At start address of `f', registers and stack layout become like below:

	r4 = 0x11223344
	r6 = 0x12345678, r7 = 0x9abcdef0
	r8 = 0x55667788, r9 = 0x99aabbcc
	10 = 0xddeeff00, r11= 0x87654321

	+------------------+ <- r29
	|    0x0fedcba9    |
	+------------------+
	|    0x87654321    |
	+------------------+

	Function return value is set to r2 and r3.

(*7) Floating point number argument and return value

        sizeof(float) = 4
	sizeof(double) = 8
	sizeof(long double) = 8

	IQ2000 doens't have FPU, so software calculates floating point number
	operation. For `float', same with (*5). For `double' and `long double'
	same with (*6).

(*8) Structure argument and return value

        When calling the function which taks structure type argument,
	set the address of structure.
	When calling the function which returns structure type, set the
	address for return value to r4.
	