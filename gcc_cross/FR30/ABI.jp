FR30 の ABI

(*1) 特別なレジスタ

    fp : r14 の別名(フレームポインタ) 
    sp : r15 の別名(スタックポインタ)
    rp : リンクポインタ

(*2) 函数呼び出し

	ldi:32	func, r1
	call	@r1

	call 命令の次のアドレスが rp レジスタにセットされる.

(*3) 函数復帰

	ret

(*4) プロローグ

	以下は 128 バイトのローカル領域を使用する函数のプロローグ

	st	rp, @-r15
	enter	#132

	+---------------+ <- r15_{enter 命令の後}
	|		|
	|		|
	~		~
	|		|
	|		|
	+---------------+ <- r14_{enter 命令の後}
	| r14_{函数の先頭}|
	+---------------+ <- r15_{st 命令の後}
	| rp_{函数の先頭}	|
	+---------------+ <- r15_{函数の先頭}

(*5) エピローグ

        以下はローカル領域のバイト数に依存しない函数のプロローグ 

	leave
	ld	@r15+, rp
	ret

	r15, r14 が復元され呼び出し元に復帰する.

(*6) 通常の函数の呼び出し

	第 1 引数 : r4
	第 2 引数 : r5
	第 3 引数 : r6
	第 4 引数 : r7
	第 5 引数以降 : スタックに積む

	函数の戻り値は r4 にセットされる.

(*7) long long を引数とする函数呼び出し. long long を返す函数呼び出し

        レジスタがペアで使用される.

	long long f(int a, long long b, long long c);

	f(1, 2LL, 3LL);

	に対して f の先頭アドレスでは以下のようになっている.

	r4 = 1, r5 = 0, r6 = 2, r7 = 0

	+---------------+ <- r15
	|       3	|
	+---------------+ +4

	函数の戻り値は r4, r5 にセットされる.

(*8) float, double, long double を引数とする函数呼び出し. 返す函数の呼び出し.

    	sizeof(float) = 4
	sizeof(double) = sizeof(long double) = 8

	float に対しては (*6) の規則が, double, long double に対しては (*7)
	の規則がそれぞれ適用される.

(*9) 構造体を引数とする函数呼び出し. 構造体を返す函数呼び出し.

        