(*) 簡易版 printf

0x09f0 : exit(0) の呼び出し
0x09f1 : printf
0x09f2 : puts
0x09f3 : putchar

(*) 結果

2021.12.01.11.43
ISO_IEC_9899 1347/2836	     # 8 Mbyte を固定で確保

2021.12.04.09.18
ISO_IEC_9899 1370/2836       # 断片でメモリを確保

断片でメモリを確保するようにしたところ

41_ISO_IEC_9899/6_Language/3_Expressions/16_Assignment_operators/4_ptrptr/1_ok/test000.c

のように .text セクションが以下のように 4 の倍数のサイズでない場合

Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000092  00000100  00000100  00000100  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

.text セクションの最後の命令をフェッチするときに範囲外メモリアクセスする. 上の
例だと 0x190 に 4 バイトアクセスしている. シミュレータに問題があるのだが簡単に
修正できないのでとりあえず保留. 同じ症状がおそらく 1370 - 1347 = 33 テスト
ある.

2021.12.12.17.15
ISO_IEC_9889 1369/2835
MCORE/test 2/11

2021.12.21.17.23
ISO_IEC_9899 922/2835
MCORE/test 3/14

=> フェッチの問題を修正して 2021.12.22.06.06 でテストしたが, 不思議なことに fail の数が
2021.12.21.17.23 と変わらなかった.

2021.12.22.06.06
ISO_IEC_9899 922/2835
MCORE/test 4/14

2021.12.23.13.20
ISO_IEC_9899 1369/2835           おかしい. 前回から実質の変更はないのだが...
MCORE/test 3/14                  というよりも前回, 前々回の fail の数が少なすぎるように
	   			 思える. テストのシステムに何らかのバグがある.
				 もしくはツールにバグがあるのか?

2021.12.26.06.05                 フェッチの問題の修正が正しくなかったので修正し
ISO_IEC_9899 922/2835            再度テストした. 一応納得の結果.
MCORE/test 2/12
