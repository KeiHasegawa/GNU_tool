Break-point of C function

I tried to execute "hello world" program:

(pru-elf-gdb) b main
(pru-elf-gdb) run

When the break-point was hit, `gdb_assert' failed like below:

Breakpoint 3, main (
findvar.c:289: internal-error: value* value_of_register_lazy(frame_info*, int): Assertion `regnum < gdbarch_num_cooked_regs (gdbarch)' failed.
A problem internal to GDB has been detected,
further debugging may prove unreliable.
Quit this debugging session? (y or n) [answered Y; input not from terminal]

where, `regnum' was 132. It was obviously error.

gdb-10.2.pru-elf/gdb/dwarf2/frame.c

      realnum = dwarf_reg_to_regnum_or_error
	(gdbarch, cache->reg[regnum].loc.reg);
      return frame_unwind_got_register (this_frame, regnum, realnum);

At above, `realnum' was set 132.
Caluculation `realnum = 132' from `regnum = 32' is not correct.
I set 32 to `realnum' by `gdb' facility and it worked. So that I fixed
like below:

    case DWARF2_FRAME_REG_SAVED_REG:
#if 0      
      realnum = dwarf_reg_to_regnum_or_error
	(gdbarch, cache->reg[regnum].loc.reg);
#else
      realnum = regnum;
#endif      
      return frame_unwind_got_register (this_frame, regnum, realnum);

And next,

b puts
run

This caused the similar phenomenon:

gdb-10.2.pru-elf/gdb/dwarf2/loc.c

	    int gdb_regnum = dwarf_reg_to_regnum_or_error (arch, p->v.regno);
	    ULONGEST reg_bits = 8 * register_size (arch, gdb_regnum);

where,

gdb_regnum = 56

and

p->v.regno = 56

These were beyond my idea. I did not understantd debug information
so I could not fix any more. 

