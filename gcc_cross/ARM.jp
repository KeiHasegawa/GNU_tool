ARM のクロスコンパイル環境

(*1) ARM
(*2) スクリプトによるインストール
(*3)

(*1) ARM
https://ja.wikipedia.org/wiki/ARM%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%81%E3%83%A3

(*2) スクリプトによるインストール
「IQ2000」と同じスクリプトを使用する:

set TARGET = arm-elf   # ここを変更

すると gcc-10.2 の make で以下のエラーになる:

./configure --prefix=/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG --target=arm-elf --disable-libstdc++-v3 --disable-libssp --disable-libquadmath --disable-libgfortran --disable-libobjc
...
make
...
checking for struct tms... yes
checking for clock_t... yes
checking for F_SETLKW... yes
checking if mkdir takes one argument... no
*** Configuration arm-unknown-elf not supported
make[1]: *** [Makefile:4314: configure-gcc] エラー 1
make[1]: ディレクトリ '/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf' から出ます
make: *** [Makefile:938: all] エラー 2

これは一見, configure でエラーしたように見える. もう少し厳密に言えば

make から実行された configure コマンドがエラーした

ということになる. 最後の make のメッセージは

/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf

で

configure-gcc

というターゲットに対応するコマンドを実行した結果エラーしたと読むのが正しい.
これは「MIPS」とは違うエラーになっている.
このエラーは結局回避できなかった. 急いでいる方は (*3) に進んで下さい.

いずれにしても configure でエラーしているので

% ls -ltr `find . -name 'config.log'`

のようにすることで最後に実行した configure のログが判明した:

./host-i686-pc-linux-gnu/gcc/config.log

最後の行を見てみると

configure: exit 1

とある. エラーしている. さてこの config.log から

*** Configuration arm-unknown-elf not supported

という文字を探してみたが見つからない. さてどこでエラーしたと考えるべきか.

このメッセージの直前にある

checking if mkdir takes one argument... no

が原因かと思い, このメッセージを config.log から探してみた. すると

configure:11925: checking if mkdir takes one argument
configure:11951: g++ -c -g    conftest.cpp >&5
configure:11951: $? = 0
configure:11958: result: no

のようになっている. $? = 0 なので正常終了なのだが, だとすれば何故エラーなのだろう.

config.log の先頭には

  $ /media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/gcc/configure --srcdir=../.././gcc --cache-file=./config.cache --prefix=/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG --disable-libstdc++-v3 --disable-libssp --disable-libquadmath --disable-libgfortran --disable-libobjc --enable-languages=c,c++,fortran,lto,objc --program-transform-name=s&^&arm-elf-& --disable-option-checking --build=i686-pc-linux-gnu --host=i686-pc-linux-gnu --target=arm-elf

のようにあるのでこのように実行されたのだろうと思う.
実際にやってみた:

% cd ./host-i686-pc-linux-gnu/gcc
% /media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/gcc/configure --srcdir=../.././gcc --cache-file=./config.cache --prefix=/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG --disable-libstdc++-v3 --disable-libssp --disable-libquadmath --disable-libgfortran --disable-libobjc --enable-languages=c,c++,fortran,lto,objc --program-transform-name='s&^&arm-elf-&' --disable-option-checking --build=i686-pc-linux-gnu --host=i686-pc-linux-gnu --target=arm-elf


ここで

's&^&arm-elf-&'

の部分はシングルクォーテーションで囲う必要がある.

...
checking if mkdir takes one argument... no
*** Configuration arm-unknown-elf not supported
%

エラーは再現できているようである.

% sh -vx /media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/gcc/configure --srcdir=../.././gcc --cache-file=./config.cache --prefix=/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG --disable-libstdc++-v3 --disable-libssp --disable-libquadmath --disable-libgfortran --disable-libobjc --enable-languages=c,c++,fortran,lto,objc --program-transform-name='s&^&arm-elf-&' --disable-option-checking --build=i686-pc-linux-gnu --host=i686-pc-linux-gnu --target=arm-elf


のように実行してみた. そうするとログの中から以下を発見した

# Unsupported targets list.  Do not put an entry in this list unless
# it would otherwise be caught by a more permissive pattern.  The list
# should be in alphabetical order.
case ${target} in
 # Avoid special cases that are not obsolete
   arm*-*-*eabi*			\
 )
	;;
   arm*-wince-pe*			\
 | arm*-*-ecos-elf			\
 | arm*-*-elf				\
 | arm*-*-linux*			\
 | arm*-*-uclinux*			\
 | i[34567]86-go32-*			\
 | i[34567]86-*-go32*			\
 | m68k-*-uclinuxoldabi*		\
 | mips64orion*-*-rtems*		\
 | pdp11-*-bsd				\
 | powerpc*-*-linux*paired*		\
 | powerpc*-*-*spe*			\
 | sparc-hal-solaris2*			\
 | spu*-*-*				\
 | thumb-*-*				\
 | *-*-freebsd[12] | *-*-freebsd[1234].* \
 | *-*-freebsd*aout*			\
 | *-*-linux*aout*			\
 | *-*-linux*coff*			\
 | *-*-linux*libc1*			\
 | *-*-linux*oldld*			\
 | *-*-rtemsaout*			\
 | *-*-rtemscoff*			\
 | *-*-solaris2				\
 | *-*-solaris2.[0-9]			\
 | *-*-solaris2.[0-9].*			\
 | *-*-solaris2.10*			\
 | *-*-sysv*				\
 | vax-*-vms*				\
 )
	echo "*** Configuration ${target} not supported" 1>&2
	exit 1
	;;
esac
++ case ${target} in
++ echo '*** Configuration arm-unknown-elf not supported'
*** Configuration arm-unknown-elf not supported

なるほどここらしい.

/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/gcc/configure

の中から上の該当箇所は見つからず. 一体どういうカラクリなのだろう.
上のファイルから別のシェルスクリプトが実行されればこのようなログになる
可能性はある. それであれば

case ${target} in

という文字列をファイルから探したほうが良いと思ったので

% find /media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf -type f -exec grep --color -nH --null -e 'case.*target.*in' \{\} +

のように実行してみた. 思いの他合致している.
検索する文字を変更して以下のようにしてみた:

find /media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf -type f -exec grep --color -nH --null -e 'Avoid special cases that are not obsolete' \{\} +
/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/gcc/config.gcc:267: # Avoid special cases that are not obsolete

ヒットしている.

 | arm*-*-elf				\

の行を config.gcc から削除した.

% sh -vx /media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/gcc/configure --srcdir=../.././gcc --cache-file=./config.cache --prefix=/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG --disable-libstdc++-v3 --disable-libssp --disable-libquadmath --disable-libgfortran --disable-libobjc --enable-languages=c,c++,fortran,lto,objc --program-transform-name='s&^&arm-elf-&' --disable-option-checking --build=i686-pc-linux-gnu --host=i686-pc-linux-gnu --target=arm-elf

もう一度実行してみたところ, まだエラーしているようである.
しかもこのときはログが多すぎて何を見ていいのかサッパリである.

% /media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/gcc/configure --srcdir=../.././gcc --cache-file=./config.cache --prefix=/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG --disable-libstdc++-v3 --disable-libssp --disable-libquadmath --disable-libgfortran --disable-libobjc --enable-languages=c,c++,fortran,lto,objc --program-transform-name='s&^&arm-elf-&' --disable-option-checking --build=i686-pc-linux-gnu --host=i686-pc-linux-gnu --target=arm-elf

のように実行してみたところ

checking if mkdir takes one argument... no
*** Configuration arm-unknown-elf not supported

これは, エラーを回避できていなかったらしい.
ログの中から以下を見つけた:

*)
	echo "*** Configuration ${target} not supported" 1>&2
	exit 1
	;;
esac
++ case ${target} in
++ echo '*** Configuration arm-unknown-elf not supported'

これはどれにも該当する case ラベルがなかったということなのだろう.
おそらく先ほど config.gcc で削除した

 | arm*-*-elf				\

でもエラーを回避し切れなかったようである.

/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/gcc/configure

では

# Collect target-machine-specific information.
. ${srcdir}/config.gcc || exit 1

のように config.gcc を読み込んでいるらしい. そこでこれをコメントアウト
してみた.

% /media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/gcc/configure --srcdir=../.././gcc --cache-file=./config.cache --prefix=/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG --disable-libstdc++-v3 --disable-libssp --disable-libquadmath --disable-libgfortran --disable-libobjc --enable-languages=c,c++,fortran,lto,objc --program-transform-name='s&^&arm-elf-&' --disable-option-checking --build=i686-pc-linux-gnu --host=i686-pc-linux-gnu --target=arm-elf

改めて上を実行してみたところエラーは発生していない. この対処が正しいか
どうかは別にしてこれでやってみることにする.

% cd ../..
% make
...
