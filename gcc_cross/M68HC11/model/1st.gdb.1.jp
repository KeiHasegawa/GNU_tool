2022.01.18 9:00

自前の m68hc11 のコンパイラで a.c 

#include <stdio.h>

int f(int a, int b)
{
  return a + b;
}

int main()
{
  printf("hello world %d\n", f(5, 6));
  return 0;
}

をコンパイルして

m68hc11-elf-gdb a.c -x gdbcom

のように実行すると f にステップインしたところでプロローグをスキップできていない.

この結果デバッグ情報には

a がフレーム相対 0 にある
b がフレーム相対 8 にある

となっているので, f の先頭アドレスでの *_.frame = 0xfef7 から

*(int*)0xfef7 = 114085068
*(int*)(0xfef7+8) = 149317224

を a, b の値として表示している.
まずはプロローグをスキップできるようにする.

main 函数のプロローグはなぜかスキップできている. 引数がないからだろうか.

そこでどう見ても自前の m68hc11 コンパイラに問題があると推測できるのではあるが, 実際に
プロローグをスキップしているのは gdb だからまずはそこを調べてみる.

f にステップインするのではなくて f にブレークポイントをセットしてそこまで実行してみると
プロローグはスキップできている. このとき *_.frame =~ 0xfeeb であるが

(m68hc11-elf-gdb) p *(int*)(0xfeeb+1)
$1 = 5
(m68hc11-elf-gdb) p *(int*)(0xfeeb+1+8)
$2 = 6

のようになっている. つまり 1 バイトずれている.
