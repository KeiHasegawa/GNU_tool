自前の cc1 で -g 指定して生成したコードを sh64-elf-gdb で実行した.
main にブレークポイントをセットするとソースとの対応が取れていない.

sh64-elf-gdb 視点で調べてみたところ以下のように sh_skip_prologue
が期待しない pc で呼び出されている:

Thread 1 "gdb" hit Breakpoint 2, sh_skip_prologue (gdbarch=0x8d083f8, pc=445) at sh-tdep.c:772
(gdb) p/x pc
$3 = 0x1bd   ★
(gdb) 


00000000000001bc <main>:                     ★
 1bc:	d0ffc0f0 	addi	r15,-16,r15
 1c0:	acf000d0 	st.q	r15,0,r13
 1c4:	acf004e0 	st.q	r15,8,r14
 1c8:	d0f000e0 	addi	r15,0,r14
 1cc:	cc001850 	movi	6,r5

0x1bc が期待値. 「インストール」を見直したところ 1 ずれるのはアセンブラに問題がありそう.
以下のように修正してみた:

#if 0      
      if (fixP->fx_offset == 1) {
	rel->addend = 0;
	return 1;
      }
#else
      fixP->fx_offset &= (long long)~0 << 1;
#endif      

% sh64-elf-gdb -q -x gdbcom a.elf
Reading symbols from a.elf...
Connected to the simulator.
Loading section .text, size 0x134 lma 0x100
Loading section .rodata, size 0x10 lma 0x234
Start address 0x100
Transfer rate: 2592 bits in <1 sec.
Breakpoint 1 at 0x1cc: file a.c, line 10.  ★

Breakpoint 1, main () at a.c:10
10	  printf("hello world %d\n", f(5, 6));
f (a=<error reading variable: Cannot access memory at address 0x20000>, 
    b=<error reading variable: Cannot access memory at address 0x20004>)
    at a.c:4
4	{
#0  f (a=<error reading variable: Cannot access memory at address 0x20000>, 
    b=<error reading variable: Cannot access memory at address 0x20004>)
    at a.c:4
#1  0x0000000000000000 in ?? ()
Backtrace stopped: frame did not save the PC
Warning:
Cannot insert breakpoint 0.
Cannot access memory at address 0x0

gdbcom:10: Error in sourced command file:
Command aborted.
(sh64-elf-gdb) q
A debugging session is active.

	Inferior 1 [process 42000] will be killed.

Quit anyway? (y or n) y

%

まだできていないが main のブレークポイントは機能している.
