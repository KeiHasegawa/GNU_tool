(*1) SH64
https://ja.wikipedia.org/wiki/SuperH

(*2) binutils のインストール

% cd /media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG
% gunzip -c ../binutils-2.30.tar.gz | tar xf -
% mv binutils-2.30 binutils-2.30.sh64-elf
% cd binutils-2.30.sh64-elf
% ./configure --prefix=/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG --target=sh64-elf --enable-obsolete
% make all
% make install

(*3) gdb のインストール

% xz -d -c ../gdb-10.2-1.src/gdb-10.2.tar.xz | tar xf -
% mv gdb-10.2 gdb-10.2.sh64-elf
% cd gdb-10.2.sh64-elf
% rm -r -f bfd
% ln -s ../binutils-2.30.sh64-elf/bfd bfd
% rm -r -f opcodes
% ln -s ../binutils-2.30.sh64-elf/opcodes opcodes
% ./configure --prefix=/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG --target=sh64-elf --enable-obsolete

Makefile を修正:

all-bfd と all-opcodes を空のターゲットにする.

% make
...
gcc -DHAVE_CONFIG_H -DWITH_DEFAULT_MODEL='"sh5"' -DWITH_ALIGNMENT=STRICT_ALIGNMENT  -DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG  -DWITH_HW=1 -DDEFAULT_INLINE=0  -DWITH_SCACHE=16384       -I. -I. -I../common -I./../common -I../../include -I./../../include -I../../bfd -I./../../bfd -I../../opcodes -I./../../opcodes  -g -O2 -c -o sim-load.o -MT sim-load.o -MMD -MP -MF .deps/sim-load.Tpo ./../common/sim-load.c
./../common/sim-load.c: 関数 ‘sim_load_file’ 内:
./../common/sim-load.c:104:30: エラー: マクロ "bfd_section_size" は引数を 2 要求しますが、1 個しか与えられていません
...
%

以下のようにして回避. これと同じエラーが発生するので同様に回避する.

#undef bfd_section_flags
#define bfd_section_flags(ptr) ((ptr)->flags)

#undef bfd_section_name
#define bfd_section_name(ptr) ((ptr)->name)

#undef bfd_section_size
#define bfd_section_size(ptr) ((ptr)->size)

#undef bfd_section_vma
#define bfd_section_vma(ptr) ((ptr)->vma)

#undef bfd_section_lma
#define bfd_section_lma(ptr) ((ptr)->lma)

#undef bfd_section_alignment
#define bfd_section_alignment(ptr) ((ptr)->alignment_power)

#undef bfd_set_section_flags
#define bfd_set_section_flags(ptr, v) ((ptr)->flags = v)

#undef bfd_set_section_name
#define bfd_set_section_name(ptr, v) ((ptr)->name = v)

#undef bfd_set_section_size
#define bfd_set_section_size(ptr, v) ((ptr)->size = v)

#undef bfd_set_section_vma
#define bfd_set_section_vma(ptr, v) ((ptr)->vma = v)

#undef bfd_set_section_lma
#define bfd_set_section_lma(ptr, v) ((ptr)->lma = v)

#undef bfd_set_section_alignment
#define bfd_set_section_alignment(ptr, v) ((ptr)->alignment_power = v)

% make
...
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -D_GNU_SOURCE -I. -I./../include -I./../bfd -I../bfd -DNOBFD=0 -std=gnu99 -Wall -W -Wall -Wno-narrowing -Wwrite-strings -Wmissing-format-attribute -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -pedantic -Wno-long-long -I./../zlib -g -O2 -MT libctf_la-ctf-open.lo -MD -MP -MF .deps/libctf_la-ctf-open.Tpo -c ctf-open.c -o libctf_la-ctf-open.o
In file included from ./../bfd/elf-bfd.h:28,
                 from ctf-open.c:30:
./../include/bfdlink.h:45:6: エラー: ‘enum notice_asneeded_action’ の再定義です
   45 | enum notice_asneeded_action {
...

以下のように修正
./../include/bfdlink.h:
#if 0
enum notice_asneeded_action {
  notice_as_needed,
  notice_not_needed,
  notice_needed
};
#endif

% make
...
  CXX    dwarf2/macro.o
dwarf2/macro.c: 関数 ‘void dwarf_decode_macro_bytes(dwarf2_per_objfile*, buildsym_compunit*, bfd*, const gdb_byte*, const gdb_byte*, macro_source_file*, const line_header*, const dwarf2_section_info*, int, int, unsigned int, htab_t)’ 内:
dwarf2/macro.c:468:7: エラー: ‘DIAGNOSTIC_PUSH’ was not declared in this scope
  468 |       DIAGNOSTIC_PUSH
      |       ^~~~~~~~~~~~~~~
...

宣言を直接書いて回避

% make
  CXX    gdb_bfd.o
gdb_bfd.c: 関数 ‘void gdb_bfd_init_data(bfd*, stat*)’ 内:
gdb_bfd.c:426:3: エラー: ‘bfd_set_usrdata’ was not declared in this scope; did you mean ‘bfd_set_format’?
  426 |   bfd_set_usrdata (abfd, gdata);
      |   ^~~~~~~~~~~~~~~
...

以下エラーが発生するたびに他のプロセッッサの gdb のビルドを参考にして
エラーを回避する.
