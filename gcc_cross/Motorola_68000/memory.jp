M68000 シミュレータのメモリ

sim_open から呼び出された函数 sim_hw_configure で以下のように sim_do_commandf
を呼び出している:

	  sim_do_commandf (sd, "memory region 0x%lx@%d,0x%lx",
			   /* MONITOR_BASE, MONITOR_SIZE */
			   0x8000, M6811_RAM_LEVEL, 0x8000);
	  sim_do_commandf (sd, "memory region 0x000@%d,0x8000",
			   M6811_RAM_LEVEL);


1 つ目は memory region 0x8000@3,0x8000
2 つ目は memory region 0x000@3,0x8000

になる. 結果的には

	do_memopt_add (sd, level, space, addr, nr_bytes, modulo,
		       &STATE_MEMOPT (sd), NULL);

の呼び出しになるが @3 は level = 3 に相当するが意味はよく分かっていない.
いずれにしても [0, 0x10000) の 64 KBytes を確保している.

これを止めて以下のようにプログラムのロードのときにメモリを確保する.

*** gdb-10.2.arm-elf/sim/common/sim-load.c	2021-04-25 13:06:26.000000000 +0900
--- gdb-10.2.m68hc11-elf/sim/common/sim-load.c	2021-12-03 18:24:51.000000000 +0900
***************
*** 133,143 ****
--- 133,150 ----
  		}
  	      data_count += size;
  	      bfd_get_section_contents (result_bfd, s, buffer, 0, size);
+        	      sim_do_commandf(sd, "memory-region 0x%lx,0x%lx", lma, size);
  	      do_write (sd, lma, buffer, size);
  	      found_loadable_section = 1;
  	      free (buffer);
  	    }
  	}
+         else if (s->flags & SEC_ALLOC) {
+           bfd_vma lma = lma_p ? bfd_section_lma(s) : bfd_section_vma(s);
+           bfd_size_type size = bfd_section_size(s);
+           sim_do_command(sd, "memory-fill 0xcc");
+           sim_do_commandf(sd, "memory-region 0x%lx,0x%lx", lma, size);
+         }
      }
  
    if (!found_loadable_section)

.bss は 0xcc で初期化される. スタックは別途割り当てる必要がある.
