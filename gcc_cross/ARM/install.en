ARM cross compile environment

(*1) ARM
(*2) Install with script
(*3) gcc-3.4.4
(*4) gdb
(*5) newlib-1.13.0
(*6) Verifcation => OK

(*1) ARM
https://en.wikipedia.org/wiki/ARM_architecture

(*2) Install with script
Use the same script with "IQ2000"

set TARGET = arm-elf   # Change

But this script caused error at gcc-10.2 build:

./configure --prefix=/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG --target=arm-elf --disable-libstdc++-v3 --disable-libssp --disable-libquadmath --disable-libgfortran --disable-libobjc
...
make
...
checking for struct tms... yes
checking for clock_t... yes
checking for F_SETLKW... yes
checking if mkdir takes one argument... no
*** Configuration arm-unknown-elf not supported
make[1]: *** [Makefile:4314: configure-gcc] Error 1
make[1]: Leaving directory '/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf'
make: *** [Makefile:938: all] Error 2

At a glance, configure seemed to cause error. More exactly, say

configure caused error which was executed by `make'

The last message of `make' means like below:

At directory

/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf


the target named

configure-gcc

command was executed and failed.

This error is diffenrent from that of "MIPS".
Unfortunately, I could not get rid of this error. You can skip to (*3).

Anyway, configure cased error. So I executed like below:

% ls -ltr `find . -name 'config.log'`

Then it's revealed that the last `configure' execution log was:

./host-i686-pc-linux-gnu/gcc/config.log

The last line was:

configure: exit 1

This meant that the `configure' caused error. I searched below string
from this config.log:

*** Configuration arm-unknown-elf not supported

But did not exsist. Well, I wondered which part caused the error.

I wondered that at just previous part

checking if mkdir takes one argument... no

was the reason of the error. Then I seached from the config.log, then

configure:11925: checking if mkdir takes one argument
configure:11951: g++ -c -g    conftest.cpp >&5
configure:11951: $? = 0
configure:11958: result: no

I found abvoe, where, $? = 0 meant that exit normally.

By the way, the head of the config.log was

  $ /media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/gcc/configure --srcdir=../.././gcc --cache-file=./config.cache --prefix=/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG --disable-libstdc++-v3 --disable-libssp --disable-libquadmath --disable-libgfortran --disable-libobjc --enable-languages=c,c++,fortran,lto,objc --program-transform-name=s&^&arm-elf-& --disable-option-checking --build=i686-pc-linux-gnu --host=i686-pc-linux-gnu --target=arm-elf

Then I decided to do above acutally.

% cd ./host-i686-pc-linux-gnu/gcc
% /media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/gcc/configure --srcdir=../.././gcc --cache-file=./config.cache --prefix=/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG --disable-libstdc++-v3 --disable-libssp --disable-libquadmath --disable-libgfortran --disable-libobjc --enable-languages=c,c++,fortran,lto,objc --program-transform-name='s&^&arm-elf-&' --disable-option-checking --build=i686-pc-linux-gnu --host=i686-pc-linux-gnu --target=arm-elf

here, it was necessary to add single quotation like:

's&^&arm-elf-&'


...
checking if mkdir takes one argument... no
*** Configuration arm-unknown-elf not supported
%

OK. I could reproduce the error. So I executed like below:

% sh -vx /media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/gcc/configure --srcdir=../.././gcc --cache-file=./config.cache --prefix=/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG --disable-libstdc++-v3 --disable-libssp --disable-libquadmath --disable-libgfortran --disable-libobjc --enable-languages=c,c++,fortran,lto,objc --program-transform-name='s&^&arm-elf-&' --disable-option-checking --build=i686-pc-linux-gnu --host=i686-pc-linux-gnu --target=arm-elf

Then I found below:

# Unsupported targets list.  Do not put an entry in this list unless
# it would otherwise be caught by a more permissive pattern.  The list
# should be in alphabetical order.
case ${target} in
 # Avoid special cases that are not obsolete
   arm*-*-*eabi*			\
 )
	;;
   arm*-wince-pe*			\
 | arm*-*-ecos-elf			\
 | arm*-*-elf				\
 | arm*-*-linux*			\
 | arm*-*-uclinux*			\
 | i[34567]86-go32-*			\
 | i[34567]86-*-go32*			\
 | m68k-*-uclinuxoldabi*		\
 | mips64orion*-*-rtems*		\
 | pdp11-*-bsd				\
 | powerpc*-*-linux*paired*		\
 | powerpc*-*-*spe*			\
 | sparc-hal-solaris2*			\
 | spu*-*-*				\
 | thumb-*-*				\
 | *-*-freebsd[12] | *-*-freebsd[1234].* \
 | *-*-freebsd*aout*			\
 | *-*-linux*aout*			\
 | *-*-linux*coff*			\
 | *-*-linux*libc1*			\
 | *-*-linux*oldld*			\
 | *-*-rtemsaout*			\
 | *-*-rtemscoff*			\
 | *-*-solaris2				\
 | *-*-solaris2.[0-9]			\
 | *-*-solaris2.[0-9].*			\
 | *-*-solaris2.10*			\
 | *-*-sysv*				\
 | vax-*-vms*				\
 )
	echo "*** Configuration ${target} not supported" 1>&2
	exit 1
	;;
esac
++ case ${target} in
++ echo '*** Configuration arm-unknown-elf not supported'
*** Configuration arm-unknown-elf not supported

I see. Above was the reason of the error. But I colud not find above from

/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/gcc/configure

It's possible that some script was executed from above `configure'.
Then I thought that I should search below:

case ${target} in

Then I executed like below:

% find /media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf -type f -exec grep --color -nH --null -e 'case.*target.*in' \{\} +

But too many files were matched. I changed the string to search:

% find /media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf -type f -exec grep --color -nH --null -e 'Avoid special cases that are not obsolete' \{\} +
/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/gcc/config.gcc:267: # Avoid special cases that are not obsolete

OK. Matched. I erased below:

 | arm*-*-elf				\

from `config.gcc'. Agnain I executed like below:

% /media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/gcc/configure --srcdir=../.././gcc --cache-file=./config.cache --prefix=/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG --disable-libstdc++-v3 --disable-libssp --disable-libquadmath --disable-libgfortran --disable-libobjc --enable-languages=c,c++,fortran,lto,objc --program-transform-name='s&^&arm-elf-&' --disable-option-checking --build=i686-pc-linux-gnu --host=i686-pc-linux-gnu --target=arm-elf
...
checking if mkdir takes one argument... no
*** Configuration arm-unknown-elf not supported

This meant that I could not get rid of the error by above modification .
Again I executed with `-vx' option, and foud below from log

*)
	echo "*** Configuration ${target} not supported" 1>&2
	exit 1
	;;
esac
++ case ${target} in
++ echo '*** Configuration arm-unknown-elf not supported'

I thoght because there was no case label for `arm-unknown-elf'
above caused error. By the previous modification of `config.gcc'


 | arm*-*-elf				\

I could not get rid of the error.

/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/gcc/configure

At above `configure', `config.gcc' was executed like below:

# Collect target-machine-specific information.
. ${srcdir}/config.gcc || exit 1

Then I comment-outed above line. And executed like below:

% /media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/gcc/configure --srcdir=../.././gcc --cache-file=./config.cache --prefix=/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG --disable-libstdc++-v3 --disable-libssp --disable-libquadmath --disable-libgfortran --disable-libobjc --enable-languages=c,c++,fortran,lto,objc --program-transform-name='s&^&arm-elf-&' --disable-option-checking --build=i686-pc-linux-gnu --host=i686-pc-linux-gnu --target=arm-elf

Error did not occured. I was not sure that above modification
was correct or not. But anyway, went ahead.

% cd ../..
% make
...

TARGET_CPU_DEFAULT="" \
HEADERS="tm-preds.h" DEFINES="" \
/bin/sh ../.././gcc/mkconfig.sh tm_p.h
make[2]: *** No rule to make target 's-mddeps' needed by '../.././gcc/config//.md'. Stop.
make[2]: Leaving directory '/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/host-i686-pc-linux-gnu/gcc'
make[1]: *** [Makefile:4372: all-gcc] Error 2
make[1]: Leaving directory '/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf'
make: *** [Makefile:938: all] Error 2
%

Well, about this error,

../.././gcc/config//.md

should be

../.././gcc/config/arm/arm.md

I gave up using gcc-10.2. I tried with gcc-5.3.0. But the result was the same.

Then I decided to use gcc-3.4.4. Also error occured, but not same.
The gcc-10.2 and gcc-5.3.0 error part was passed successfuly like below:

checking if mkdir takes one argument... no
Using `./config/arm/arm.c' for machine-specific logic.
Using `./config/arm/arm.md' as machine description file.
Using the following target machine macro files:
	./config/dbxelf.h
	./config/elfos.h
	./config/arm/unknown-elf.h
	./config/arm/elf.h
	./config/arm/aout.h
	./config/arm/arm.h
Using host-default.o for host machine hooks.

And again I tried with gcc-10.2.0.arm-elf by modifying

gcc-10.2.0.arm-elf/gcc/configure

like below:

#. ${srcdir}/config.gcc || exit 1
. ../../gcc-3.4.4.arm-elf/gcc/config.gcc || exit 1

Again I restarted to install from exectution `configure' at top directory:

% cd /media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf
% find . -name config.cache -exec rm -f {} \;
% ./configure --prefix=/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG --target=arm-elf \
 --disable-libstdc++-v3 --disable-libssp --disable-libquadmath \
 --disable-libgfortran --disable-libobjc
% make
...

g++ -c   -g -O2 -DIN_GCC  -DCROSS_DIRECTORY_STRUCTURE   -fno-exceptions -fno-rtti -fasynchronous-unwind-tables -W -Wall -Wno-narrowing -Wwrite-strings -Wcast-qual -Wno-error=format-diag -Wmissing-format-attribute -Woverloaded-virtual -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H  -DGENERATOR_FILE -fno-PIE -I. -Ibuild -I../.././gcc -I../.././gcc/build -I../.././gcc/../include  -I../.././gcc/../libcpp/include  \
	-o build/genpreds.o ../.././gcc/genpreds.c
In file included from ../.././gcc/config/arm/arm.h:53,
                 from ./tm.h:12,
                 from ../.././gcc/genpreds.c:26:
../.././gcc/config/arm/arm-opts.h:29:10: Fatal error: arm-isa.h: no such file
or directory
   29 | #include "arm-isa.h"
      |          ^~~~~~~~~~~
compile terminated.
make[2]: *** [Makefile:2722: build/genpreds.o] Error 1
make[2]: Leaving directory '/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/host-i686-pc-linux-gnu/gcc'
make[1]: *** [Makefile:4372: all-gcc] Error 2
make[1]: Leaving directory '/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf'
make: *** [Makefile:938: all] Error 2

Error occured but the previous error could be gotton rid of.

% ls -l gcc/config/arm
lrwxrwxrwx 1 khasegawa khasegawa 90  Jun 17 05:59 gcc/config/arm -> /media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-3.4.4.arm-elf/gcc/config/arm/
% find . -name confi.cache -exec rm -f {} \;
% ./configure --prefix=/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG --target=arm-elf \
 --disable-libstdc++-v3 --disable-libssp --disable-libquadmath \
 --disable-libgfortran --disable-libobjc
> make
...
make[2]: Entering directory '/media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/host-i686-pc-linux-gnu/gcc'
Makefile:2326: warning: ignoring prerequisites on suffix rule definition
g++ -c   -g -O2 -DIN_GCC  -DCROSS_DIRECTORY_STRUCTURE   -fno-exceptions -fno-rtti -fasynchronous-unwind-tables     -DHAVE_CONFIG_H  -DGENERATOR_FILE -fno-PIE -I. -Ibuild -I../.././gcc -I../.././gcc/build -I../.././gcc/../include  -I../.././gcc/../libcpp/include  \
	-o build/genpreds.o ../.././gcc/genpreds.c
In file included from ./tm.h:9,
                 from ../.././gcc/genpreds.c:26:
../.././gcc/config/arm/unknown-elf.h:27:9: Error: attempt to use poisoned 'TARGET_VERSION'
   27 | #ifndef TARGET_VERSION
      |         ^
In file included from ./tm.h:10,
                 from ../.././gcc/genpreds.c:26:
../.././gcc/config/arm/elf.h:104:9: Error: attempt to use poisoned 'TARGET_VERSION'
  104 | #ifndef TARGET_VERSION
      |         ^
../.././gcc/config/arm/elf.h:135: warnign: "MAX_OFILE_ALIGNMENT" re-defined
  135 | #define MAX_OFILE_ALIGNMENT (32768 * 8)
 ...

Well, I've not experienced this error.

% cd /media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-10.2.0.arm-elf/host-i686-pc-linux-gnu/gcc
% g++ -c   -g   -DIN_GCC  -DCROSS_DIRECTORY_STRUCTURE   -fno-exceptions -fno-rtti -fasynchronous-unwind-tables     -DHAVE_CONFIG_H  -DGENERATOR_FILE -fno-PIE -I. -Ibuild -I../.././gcc -I../.././gcc/build -I../.././gcc/../include  -I../.././gcc/../libcpp/include  	-o build/genpreds.o ../.././gcc/genpreds.c

OK. I could reproduce the error.

% g++ -E   -g   -DIN_GCC  -DCROSS_DIRECTORY_STRUCTURE   -fno-exceptions -fno-rtti -fasynchronous-unwind-tables     -DHAVE_CONFIG_H  -DGENERATOR_FILE -fno-PIE -I. -Ibuild -I../.././gcc -I../.././gcc/build -I../.././gcc/../include  -I../.././gcc/../libcpp/include  	-o build/genpreds.i ../.././gcc/genpreds.c

Error occured at preprocessor level.

% chmod +x x
% cat x
#! /bin/csh -f

setenv LANG C
g++ -E   -g   -DIN_GCC  -DCROSS_DIRECTORY_STRUCTURE   -fno-exceptions -fno-rtti -fasynchronous-unwind-tables     -DHAVE_CONFIG_H  -DGENERATOR_FILE -fno-PIE -I. -Ibuild -I../.././gcc -I../.././gcc/build -I../.././gcc/../include  -I../.././gcc/../libcpp/include  	../.././gcc/genpreds.c
> ./x
In file included from ./tm.h:9,
                 from ../.././gcc/genpreds.c:26:
../.././gcc/config/arm/unknown-elf.h:27:9: error: attempt to use poisoned "TARGET_VERSION"
   27 | #ifndef TARGET_VERSION


What is `poisoned'?

I found at `Stack overflow' web site. This was gcc pragma:

#pragma GCC poison HOGE

#ifndef HOGE
#endif


OK. I could reproduce the same errror. Well, I colud understand the
direct reason but at the first place, this error did not occured
at gcc-3.4.4.

% cd /media/ca850f52-0605-42a7-9fd4-899de9edf461/work/GNU_LANG/gcc-3.4.4.arm-elf/
% find . -name 'genpreds.*'
./gcc/genpreds.c
./gcc/genpreds.j
./gcc/genpreds.o
% rm ./gcc/genpreds.o
% make
...
gcc -c   -g -O2 -DIN_GCC -DCROSS_COMPILE  -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -pedantic -Wno-long-long    -DHAVE_CONFIG_H -DGENERATOR_FILE    -I. -I. -I. -I./. -I./../include  genpreds.c -o genpreds.o
...

Error not occured. Maybe include path is diffrent from the case of gcc-10.2

I wondered that what was the most simple way.
Then I decided to use gcc-3.4.4.

(*3) gcc-3.4.4

As described at "MIPS",  the same way worked well. Acutally
I did this at arm-elf-gcc installation. But there were too many things
to be written.

(*4) gdb

    The same way of the script worked well.

(*5) newlib-1.13.0

Describe as "MIPS", error occured with newlib-4.1.0. But newlib-1.13.0
worked well.

(*6) Verifcation => OK

% arm-elf-gcc -o hello.elf -g hello.c
% arm-elf-gdb hello.elf
Reading symbols from hello.elf...
(gdb) target sim
Connected to the simulator.
(gdb) load
Loading section .init, size 0x1c lma 0x8000
Loading section .text, size 0x804c lma 0x801c
Loading section .fini, size 0x18 lma 0x10068
Loading section .rodata, size 0x224 lma 0x10080
Loading section .eh_frame, size 0x4 lma 0x202a4
Loading section .ctors, size 0x8 lma 0x202a8
Loading section .dtors, size 0x8 lma 0x202b0
Loading section .jcr, size 0x4 lma 0x202b8
Loading section .data, size 0x940 lma 0x202bc
Start address 0x8110
Transfer rate: 286688 bits in <1 sec.
(gdb) b main
Breakpoint 1 at 0x8224: file hello.c, line 5.
(gdb) run
Breakpoint 1, main () at hello.c:5
5	  printf("hello world\n");
(gdb) disassemble
Dump of assembler code for function main:
   0x00008218 <+0>:	mov	r12, sp
   0x0000821c <+4>:	push	{r11, r12, lr, pc}
   0x00008220 <+8>:	sub	r11, r12, #4
=> 0x00008224 <+12>:	ldr	r0, [pc, #12]	; 0x8238 <main+32>
   0x00008228 <+16>:	bl	0x8330 <printf>
   0x0000822c <+20>:	mov	r3, #0
   0x00008230 <+24>:	mov	r0, r3
   0x00008234 <+28>:	ldm	sp, {r11, sp, pc}
   0x00008238 <+32>:	andeq	r0, r1, r0, lsl #1
End of assembler dump.
(gdb) c
hello world
[Inferior 1 (process 42000) exited normally]

