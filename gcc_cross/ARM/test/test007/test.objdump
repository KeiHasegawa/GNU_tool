
test.elf:     ファイル形式 elf32-littlearm
test.elf
アーキテクチャ: armv4t, フラグ 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
開始アドレス 0x00000100

プログラムヘッダ:
    LOAD off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**16
         filesz 0x000001cc memsz 0x000001cc flags r-x
private flags = 0x0: [APCS-32] [FPA 浮動小数形式]

セクション:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .ARM.attributes 0000001a  00000000  00000000  000001cc  2**0
                  CONTENTS, READONLY
  1 .comment      00000012  00000000  00000000  000001e6  2**0
                  CONTENTS, READONLY
  2 .text         000000b8  00000100  00000100  00000100  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000014  000001b8  000001b8  000001b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .debug_line   0000009f  00000000  00000000  000001f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_info   000000cb  00000000  00000000  00000297  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_abbrev 000000b9  00000000  00000000  00000362  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_aranges 00000040  00000000  00000000  00000420  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    000000e6  00000000  00000000  00000460  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  00000050  00000000  00000000  00000548  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000100 l    d  .text	00000000 .text
000001b8 l    d  .rodata	00000000 .rodata
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 test.c
00000000 l    df *ABS*	00000000 default.o
00000100 l       .text	00000000 start
00000114 l       .text	00000000 label
00000110 l       .text	00000000 end
00000118 g     F .text	00000058 f
00001000 g       *ABS*	00000000 stack
00000170 g     F .text	00000048 main



セクション .text の逆アセンブル:

00000100 <start>:
 100:	e1a00000 	nop			; (mov r0, r0)
 104:	e59fd008 	ldr	sp, [pc, #8]	; 114 <label>
 108:	eb000018 	bl	170 <main>
 10c:	e1a00000 	nop			; (mov r0, r0)

00000110 <end>:
 110:	e1a00000 	nop			; (mov r0, r0)

00000114 <label>:
 114:	00001000 	.word	0x00001000

00000118 <f>:
 118:	e92d4800 	push	{fp, lr}
 11c:	e28db004 	add	fp, sp, #4
 120:	e24dd018 	sub	sp, sp, #24
 124:	e50b001c 	str	r0, [fp, #-28]	; 0xffffffe4
 128:	e59f303c 	ldr	r3, [pc, #60]	; 16c <f+0x54>
 12c:	e24bc018 	sub	ip, fp, #24
 130:	e1a0e003 	mov	lr, r3
 134:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
 138:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
 13c:	e59e3000 	ldr	r3, [lr]
 140:	e58c3000 	str	r3, [ip]
 144:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
 148:	e1a0e003 	mov	lr, r3
 14c:	e24bc018 	sub	ip, fp, #24
 150:	e8bc000f 	ldm	ip!, {r0, r1, r2, r3}
 154:	e8ae000f 	stmia	lr!, {r0, r1, r2, r3}
 158:	e59c3000 	ldr	r3, [ip]
 15c:	e58e3000 	str	r3, [lr]
 160:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
 164:	e24bd004 	sub	sp, fp, #4
 168:	e8bd8800 	pop	{fp, pc}
 16c:	000001b8 	.word	0x000001b8

00000170 <main>:
 170:	e92d4800 	push	{fp, lr}
 174:	e28db004 	add	fp, sp, #4
 178:	e24dd014 	sub	sp, sp, #20
 17c:	e24b3018 	sub	r3, fp, #24
 180:	e1a00003 	mov	r0, r3
 184:	ebffffe3 	bl	118 <f>
 188:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
 18c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
 190:	e0822003 	add	r2, r2, r3
 194:	e51b3010 	ldr	r3, [fp, #-16]
 198:	e0822003 	add	r2, r2, r3
 19c:	e51b300c 	ldr	r3, [fp, #-12]
 1a0:	e0822003 	add	r2, r2, r3
 1a4:	e51b3008 	ldr	r3, [fp, #-8]
 1a8:	e0823003 	add	r3, r2, r3
 1ac:	e1a00003 	mov	r0, r3
 1b0:	e24bd004 	sub	sp, fp, #4
 1b4:	e8bd8800 	pop	{fp, pc}
セクション .debug_line のデバッグ内容の生ダンプ(test.elf より読み込んだもの):

  オフセット:                  0x0
  長さ:                        58
  DWARF バージョン:            3
  Prologue の長さ:             35
  最小命令長:                  2
  'is_stmt' の初期値:          1
  Line ベース:                 -5
  Line 範囲:                   14
  オペコードベース:            13

 オペコード:
  オペコード 1 は 0 個の引数を持ちます
  オペコード 2 は 1 個の引数を持ちます
  オペコード 3 は 1 個の引数を持ちます
  オペコード 4 は 1 個の引数を持ちます
  オペコード 5 は 1 個の引数を持ちます
  オペコード 6 は 0 個の引数を持ちます
  オペコード 7 は 0 個の引数を持ちます
  オペコード 8 は 0 個の引数を持ちます
  オペコード 9 は 1 個の引数を持ちます
  オペコード 10 は 0 個の引数を持ちます
  オペコード 11 は 0 個の引数を持ちます
  オペコード 12 は 1 個の引数を持ちます

 ディレクトリ表 (オフセット 0x1b):
  1	..

 ファイル名表(オフセット 0x1f):

  Entry	Dir	時刻	サイズ	名前
  1	1	0	0	default.S

 Line Number Statements:
  [0x0000002d]  拡張命令コード 2: 設定アドレス 0x100
  [0x00000034]  Special opcode 7: advance Address by 0 to 0x100 and Line by 2 to 3
  [0x00000035]  Special opcode 34: advance Address by 4 to 0x104 and Line by 1 to 4
  [0x00000036]  Special opcode 34: advance Address by 4 to 0x108 and Line by 1 to 5
  [0x00000037]  Special opcode 34: advance Address by 4 to 0x10c and Line by 1 to 6
  [0x00000038]  Special opcode 35: advance Address by 4 to 0x110 and Line by 2 to 8
  [0x00000039]  Advance PC by 8 to 0x118
  [0x0000003b]  拡張命令コード 1: 列の終り


  オフセット:                  0x3e
  長さ:                        93
  DWARF バージョン:            3
  Prologue の長さ:             29
  最小命令長:                  2
  'is_stmt' の初期値:          1
  Line ベース:                 -5
  Line 範囲:                   14
  オペコードベース:            13

 オペコード:
  オペコード 1 は 0 個の引数を持ちます
  オペコード 2 は 1 個の引数を持ちます
  オペコード 3 は 1 個の引数を持ちます
  オペコード 4 は 1 個の引数を持ちます
  オペコード 5 は 1 個の引数を持ちます
  オペコード 6 は 0 個の引数を持ちます
  オペコード 7 は 0 個の引数を持ちます
  オペコード 8 は 0 個の引数を持ちます
  オペコード 9 は 1 個の引数を持ちます
  オペコード 10 は 0 個の引数を持ちます
  オペコード 11 は 0 個の引数を持ちます
  オペコード 12 は 1 個の引数を持ちます

 ディレクトリー表は空です。

 ファイル名表(オフセット 0x5a):

  Entry	Dir	時刻	サイズ	名前
  1	0	0	0	test.c

 Line Number Statements:
  [0x00000065]  列幅を 1 に設定します
  [0x00000067]  拡張命令コード 2: 設定アドレス 0x118
  [0x0000006e]  Special opcode 10: advance Address by 0 to 0x118 and Line by 5 to 6
  [0x0000006f]  列幅を 12 に設定します
  [0x00000071]  Special opcode 118: advance Address by 16 to 0x128 and Line by 1 to 7
  [0x00000072]  列幅を 10 に設定します
  [0x00000074]  Special opcode 202: advance Address by 28 to 0x144 and Line by 1 to 8
  [0x00000075]  列幅を 1 に設定します
  [0x00000077]  Special opcode 202: advance Address by 28 to 0x160 and Line by 1 to 9
  [0x00000078]  Special opcode 120: advance Address by 16 to 0x170 and Line by 3 to 12
  [0x00000079]  列幅を 16 に設定します
  [0x0000007b]  Special opcode 90: advance Address by 12 to 0x17c and Line by 1 to 13
  [0x0000007c]  列幅を 13 に設定します
  [0x0000007e]  Special opcode 90: advance Address by 12 to 0x188 and Line by 1 to 14
  [0x0000007f]  列幅を 22 に設定します
  [0x00000081]  Special opcode 33: advance Address by 4 to 0x18c and Line by 0 to 14
  [0x00000082]  列幅を 17 に設定します
  [0x00000084]  Special opcode 33: advance Address by 4 to 0x190 and Line by 0 to 14
  [0x00000085]  列幅を 31 に設定します
  [0x00000087]  Special opcode 33: advance Address by 4 to 0x194 and Line by 0 to 14
  [0x00000088]  列幅を 26 に設定します
  [0x0000008a]  Special opcode 33: advance Address by 4 to 0x198 and Line by 0 to 14
  [0x0000008b]  列幅を 40 に設定します
  [0x0000008d]  Special opcode 33: advance Address by 4 to 0x19c and Line by 0 to 14
  [0x0000008e]  列幅を 35 に設定します
  [0x00000090]  Special opcode 33: advance Address by 4 to 0x1a0 and Line by 0 to 14
  [0x00000091]  列幅を 49 に設定します
  [0x00000093]  Special opcode 33: advance Address by 4 to 0x1a4 and Line by 0 to 14
  [0x00000094]  列幅を 44 に設定します
  [0x00000096]  Special opcode 33: advance Address by 4 to 0x1a8 and Line by 0 to 14
  [0x00000097]  列幅を 1 に設定します
  [0x00000099]  Special opcode 34: advance Address by 4 to 0x1ac and Line by 1 to 15
  [0x0000009a]  Advance PC by 12 to 0x1b8
  [0x0000009c]  拡張命令コード 1: 列の終り


.debug_info セクションの内容(test.elf より読み込んだもの):

  コンパイル単位 @ オフセット 0x0:
   長さ:        0x22 (32-bit)
   バージョン:    2
   省略オフセット: 0x0
   ポインタサイズ:4
 <0><b>: 省略番号: 1 (DW_TAG_compile_unit)
    <c>   DW_AT_stmt_list   : 0x0
    <10>   DW_AT_low_pc      : 0x100
    <14>   DW_AT_high_pc     : 0x118
    <18>   DW_AT_name        : (間接文字列、オフセット: 0x0): ../default.S
    <1c>   DW_AT_comp_dir    : (間接文字列、オフセット: 0xd): /home/khasegawa/lang/53_GNU_tool/gcc_cross/ARM/test/test003
    <20>   DW_AT_producer    : (間接文字列、オフセット: 0x49): GNU AS 2.36.1
    <24>   DW_AT_language    : 32769	(MIPS assembler)
  コンパイル単位 @ オフセット 0x26:
   長さ:        0xa1 (32-bit)
   バージョン:    4
   省略オフセット: 0x14
   ポインタサイズ:4
 <0><31>: 省略番号: 1 (DW_TAG_compile_unit)
    <32>   DW_AT_producer    : (間接文字列、オフセット: 0x69): GNU C17 10.2.0 -mcpu=arm7tdmi -marm -march=armv4t -g
    <36>   DW_AT_language    : 12	(ANSI C99)
    <37>   DW_AT_name        : (間接文字列、オフセット: 0xa3): test.c
    <3b>   DW_AT_comp_dir    : (間接文字列、オフセット: 0xaa): /home/khasegawa/lang/53_GNU_tool/gcc_cross/ARM/test/test007
    <3f>   DW_AT_low_pc      : 0x118
    <43>   DW_AT_high_pc     : 0xa0
    <47>   DW_AT_stmt_list   : 0x3e
 <1><4b>: 省略番号: 2 (DW_TAG_structure_type)
    <4c>   DW_AT_name        : S
    <4e>   DW_AT_byte_size   : 20
    <4f>   DW_AT_decl_file   : 1
    <50>   DW_AT_decl_line   : 1
    <51>   DW_AT_decl_column : 8
    <52>   DW_AT_sibling     : <0x62>
 <2><56>: 省略番号: 3 (DW_TAG_member)
    <57>   DW_AT_name        : i
    <59>   DW_AT_decl_file   : 1
    <5a>   DW_AT_decl_line   : 2
    <5b>   DW_AT_decl_column : 7
    <5c>   DW_AT_type        : <0x62>
    <60>   DW_AT_data_member_location: 0
 <2><61>: Abbrev Number: 0
 <1><62>: 省略番号: 4 (DW_TAG_array_type)
    <63>   DW_AT_type        : <0x79>
    <67>   DW_AT_sibling     : <0x72>
 <2><6b>: 省略番号: 5 (DW_TAG_subrange_type)
    <6c>   DW_AT_type        : <0x72>
    <70>   DW_AT_upper_bound : 4
 <2><71>: Abbrev Number: 0
 <1><72>: 省略番号: 6 (DW_TAG_base_type)
    <73>   DW_AT_byte_size   : 4
    <74>   DW_AT_encoding    : 7	(unsigned)
    <75>   DW_AT_name        : (間接文字列、オフセット: 0x57): long unsigned int
 <1><79>: 省略番号: 7 (DW_TAG_base_type)
    <7a>   DW_AT_byte_size   : 4
    <7b>   DW_AT_encoding    : 5	(signed)
    <7c>   DW_AT_name        : int
 <1><80>: 省略番号: 8 (DW_TAG_subprogram)
    <81>   DW_AT_external    : 1
    <81>   DW_AT_name        : (間接文字列、オフセット: 0x9e): main
    <85>   DW_AT_decl_file   : 1
    <86>   DW_AT_decl_line   : 11
    <87>   DW_AT_decl_column : 5
    <88>   DW_AT_type        : <0x79>
    <8c>   DW_AT_low_pc      : 0x170
    <90>   DW_AT_high_pc     : 0x48
    <94>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <96>   DW_AT_GNU_all_tail_call_sites: 1
    <96>   DW_AT_sibling     : <0xa8>
 <2><9a>: 省略番号: 9 (DW_TAG_variable)
    <9b>   DW_AT_name        : s
    <9d>   DW_AT_decl_file   : 1
    <9e>   DW_AT_decl_line   : 13
    <9f>   DW_AT_decl_column : 12
    <a0>   DW_AT_type        : <0x4b>
    <a4>   DW_AT_location    : 2 byte block: 91 64 	(DW_OP_fbreg: -28)
 <2><a7>: Abbrev Number: 0
 <1><a8>: 省略番号: 10 (DW_TAG_subprogram)
    <a9>   DW_AT_external    : 1
    <a9>   DW_AT_name        : f
    <ab>   DW_AT_decl_file   : 1
    <ac>   DW_AT_decl_line   : 5
    <ad>   DW_AT_decl_column : 10
    <ae>   DW_AT_type        : <0x4b>
    <b2>   DW_AT_low_pc      : 0x118
    <b6>   DW_AT_high_pc     : 0x58
    <ba>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <bc>   DW_AT_GNU_all_call_sites: 1
 <2><bc>: 省略番号: 9 (DW_TAG_variable)
    <bd>   DW_AT_name        : s
    <bf>   DW_AT_decl_file   : 1
    <c0>   DW_AT_decl_line   : 7
    <c1>   DW_AT_decl_column : 12
    <c2>   DW_AT_type        : <0x4b>
    <c6>   DW_AT_location    : 2 byte block: 91 64 	(DW_OP_fbreg: -28)
 <2><c9>: Abbrev Number: 0
 <1><ca>: Abbrev Number: 0

.debug_abbrev セクションの内容(test.elf より読み込んだもの):

  Number TAG (0x0)
   1      DW_TAG_compile_unit    [子なし]
    DW_AT_stmt_list    DW_FORM_data4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_addr
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data2
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x14)
   1      DW_TAG_compile_unit    [子あり]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_structure_type    [子あり]
    DW_AT_name         DW_FORM_string
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_member    [子なし]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_array_type    [子あり]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_subrange_type    [子なし]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_base_type    [子なし]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_base_type    [子なし]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_subprogram    [子あり]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_variable    [子なし]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_subprogram    [子あり]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_call_sites DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0

.debug_aranges セクションの内容(test.elf より読み込んだもの):

  長さ:                     28
  バージョン:               2
  .debug_info 内へのオフセット: 0
  ポインタサイズ:           4
  セグメントサイズ:         0

    アドレス   長さ
    00000100 00000018 
    00000000 00000000 
  長さ:                     28
  バージョン:               2
  .debug_info 内へのオフセット: 26
  ポインタサイズ:           4
  セグメントサイズ:         0

    アドレス   長さ
    00000118 000000a0 
    00000000 00000000 

.debug_str セクションの内容(test.elf より読み込んだもの):

  0x00000000 2e2e2f64 65666175 6c742e53 002f686f ../default.S./ho
  0x00000010 6d652f6b 68617365 67617761 2f6c616e me/khasegawa/lan
  0x00000020 672f3533 5f474e55 5f746f6f 6c2f6763 g/53_GNU_tool/gc
  0x00000030 635f6372 6f73732f 41524d2f 74657374 c_cross/ARM/test
  0x00000040 2f746573 74303033 00474e55 20415320 /test003.GNU AS 
  0x00000050 322e3336 2e31006c 6f6e6720 756e7369 2.36.1.long unsi
  0x00000060 676e6564 20696e74 00474e55 20433137 gned int.GNU C17
  0x00000070 2031302e 322e3020 2d6d6370 753d6172  10.2.0 -mcpu=ar
  0x00000080 6d377464 6d69202d 6d61726d 202d6d61 m7tdmi -marm -ma
  0x00000090 7263683d 61726d76 3474202d 67006d61 rch=armv4t -g.ma
  0x000000a0 696e0074 6573742e 63002f68 6f6d652f in.test.c./home/
  0x000000b0 6b686173 65676177 612f6c61 6e672f35 khasegawa/lang/5
  0x000000c0 335f474e 555f746f 6f6c2f67 63635f63 3_GNU_tool/gcc_c
  0x000000d0 726f7373 2f41524d 2f746573 742f7465 ross/ARM/test/te
  0x000000e0 73743030 3700                       st007.

.debug_frame セクションの内容(test.elf より読み込んだもの):


00000000 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000010 0000001c 00000000 FDE cie=00000000 pc=00000118..00000170
  DW_CFA_advance_loc: 4 to 0000011c
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r11 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 4 to 00000120
  DW_CFA_def_cfa: r11 ofs 4
  DW_CFA_advance_loc: 72 to 00000168
  DW_CFA_def_cfa: r13 ofs 8
  DW_CFA_nop

00000030 0000001c 00000000 FDE cie=00000000 pc=00000170..000001b8
  DW_CFA_advance_loc: 4 to 00000174
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r11 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 4 to 00000178
  DW_CFA_def_cfa: r11 ofs 4
  DW_CFA_advance_loc: 60 to 000001b4
  DW_CFA_def_cfa: r13 ofs 8
  DW_CFA_nop

