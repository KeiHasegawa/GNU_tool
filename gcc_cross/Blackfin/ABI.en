Blackfin ABI

(*1) Function call
(*2) Return from function
(*3) Prologue
(*4) Epilogue
(*5) Normal argument and return value
(*6) `long long' argument and return value
(*7) Floating point number argument and return value
(*8) Structure argument and return value


(*1) Function call

	call func;

	Pseudo code

	rets = (`call' instruction next address)
	pc = func

	where, `rets' is link registero f Blackfin.

(*2) Return from function

	rts;

	Pseudo code

	pc = rets


(*3) Prologue

	LINK 128;

	Above if prologue of the function which uses 128 bytes local area.

	+----------------+ <- sp_{new}
	|                |
	|                |
	|   local area   |
	|                |
	|                |
	+----------------+ +128 <- fp_{new}
	|    fp_{old}    |
	+----------------+ 
	|   rets_{old}   |
	+----------------+ <- sp_{old}

(*4) Epilogue

	UNLINK;
	rts;

	Above is epilogue of the function, and it does not depend on its
	number of loca area bytes.
	`fp', `sp' and `rets' were restored and return to callee.

(*5) Normal argument and return value

        1st : R0
        2nd : R1
        3rd : R2
        4th : use stack with offset 12

	For example,

	int f(int a0, int a1, int a2, int a3);

	f(10, 11, 12, 13);

	At the start address of `f', registers and stack layout become
	like below:

	R0 = 10, R1 = 11, R2 = 12

	+----------------+ <- sp
	|      ****      |
	+----------------+
	|      ****      |
	+----------------+
	|      ****      |
	+----------------+
	|       13       |
	+----------------+

	Function return value is set to R0.

(*6) `long long' argument and return value

        sizeof(long long) = 8

        For `long long' argument, 2 registers are used. For example,

	long long f(long long a0, long long a1);

	f(0x123456789abcdef0, 0x1122334455667788);

	At the start address of `f', registers and stack layout become
	like below:

	R0 = 0x9abcdef0, R1 = 0x12345678, R2 = 0x55667788

	+----------------+ <- sp
	|      ****      |
	+----------------+
	|      ****      |
	+----------------+
	|      ****      |
	+----------------+
	|   0x11223344   |
	+----------------+

	Function return value is set to `R0' and `R1'.

(*7) Floating point number argument and return value

        sizeof(float) = 4
	sizeof(double) = sizeof(long double) = 8

	Blackfin does not have FPU, so software calculates floating point
	number operation.
	For `float' same with (*5). For `doulbe' or `long double' same with
	(*6).

(*8) Structure argument and return value

        When calling the function which takes structure type argument,
	first 12 bytes are set to `R0', `R1' and `R2' and the rest is
	set to stack.
	When calling the function which returns structure type, the addres
	for the return value is set to `R0'.
