*** gdb-10.2.org/sim/common/sim-load.c	2021-04-25 13:06:26.000000000 +0900
--- gdb-10.2.h8300-elf/sim/common/sim-load.c	2021-12-23 10:04:37.000000000 +0900
***************
*** 53,58 ****
--- 53,62 ----
     NOTE: For historical reasons, older hardware simulators incorrectly
     write the program sections at LMA interpreted as a virtual address.
     This is still accommodated for backward compatibility reasons. */
+ #ifdef NEW_MEM_MAP
+ void set_code_area(bfd_vma, bfd_size_type);
+ int h8_get_mask(SIM_DESC);
+ #endif // NEW_MEM_MAP
  
  
  bfd *
***************
*** 133,143 ****
--- 137,167 ----
  		}
  	      data_count += size;
  	      bfd_get_section_contents (result_bfd, s, buffer, 0, size);
+ #ifdef NEW_MEM_MAP
+ 	      if (s->flags & SEC_CODE)
+ 		set_code_area(lma, size);
+ 	      int mask = h8_get_mask(sd);
+ 	      if (lma + size > mask) {
+ 		eprintf (callback,
+ 		 "`%s' section (lma : 0x%lx, size : 0x%lx) exceeds 0x%x\n",
+ 		 s->name, lma, size, mask);
+ 		return NULL;
+ 	      }
+ 	      sim_do_commandf(sd, "memory-region 0x%lx,0x%lx", lma, size);
+ #endif  // NEW_MEM_MAP
  	      do_write (sd, lma, buffer, size);
  	      found_loadable_section = 1;
  	      free (buffer);
  	    }
  	}
+ #ifdef NEW_MEM_MAP
+         else if (s->flags & SEC_ALLOC) {
+           bfd_vma vma = bfd_section_vma(s);
+           bfd_size_type size = bfd_section_size(s);
+           sim_do_command(sd, "memory-fill 0xcc");
+           sim_do_commandf(sd, "memory-region 0x%lx,0x%lx", vma, size);
+         }
+ #endif  // NEW_MEM_MAP
      }
  
    if (!found_loadable_section)
