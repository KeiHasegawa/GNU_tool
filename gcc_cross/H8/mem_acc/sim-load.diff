*** gdb-10.2.arm-elf/sim/common/sim-load.c	2021-04-25 13:06:26.000000000 +0900
--- gdb-10.2.h8300-elf/sim/common/sim-load.c	2021-12-06 13:35:03.000000000 +0900
***************
*** 53,58 ****
--- 53,83 ----
     NOTE: For historical reasons, older hardware simulators incorrectly
     write the program sections at LMA interpreted as a virtual address.
     This is still accommodated for backward compatibility reasons. */
+ #ifdef NEW_MEM_MAP
+ struct bfd_section* find_next_load_section(struct bfd_section* sec)
+ {
+   struct bfd_section* next = sec->next;
+   if (!next)
+     return NULL;
+   flagword flags = next->flags;
+   if (flags & SEC_LOAD)
+     return next;
+   return find_next_load_section(next);
+ }
+ 
+ _Bool has_gap_next_load_section(int lma_p, struct bfd_section* sec)
+ {
+   struct bfd_section* next = find_next_load_section(sec);
+   if (!next)
+     return TRUE;
+   bfd_vma lma = lma_p ?  bfd_section_lma(sec) : bfd_section_vma(sec);
+   bfd_size_type size = bfd_section_size(sec);
+   bfd_vma next_lma = lma_p ?  bfd_section_lma(next) : bfd_section_vma(next);
+   return lma + size != next_lma;
+ }
+ 
+ void set_code_area(bfd_vma, bfd_size_type);
+ #endif // NEW_MEM_MAP
  
  
  bfd *
***************
*** 133,143 ****
--- 158,190 ----
  		}
  	      data_count += size;
  	      bfd_get_section_contents (result_bfd, s, buffer, 0, size);
+ #ifdef NEW_MEM_MAP
+ #if 0
+ 	      if (s->flags & SEC_CODE) {
+ 		if (has_gap_next_load_section(lma_p, s))
+ 		  size += 2;
+ 	      }
+ #endif
+ 	      if (s->flags & SEC_CODE)
+ 		set_code_area(lma, size);
+ 	      if (lma + size > 0xffff) {
+ 		asm("int3");
+ 	      }
+ 	      sim_do_commandf(sd, "memory-region 0x%lx,0x%lx", lma, size);
+ #endif	      
  	      do_write (sd, lma, buffer, size);
  	      found_loadable_section = 1;
  	      free (buffer);
  	    }
  	}
+ #ifdef NEW_MEM_MAP
+         else if (s->flags & SEC_ALLOC) {
+           bfd_vma lma = lma_p ? bfd_section_lma(s) : bfd_section_vma(s);
+           bfd_size_type size = bfd_section_size(s);
+           sim_do_command(sd, "memory-fill 0xcc");
+           sim_do_commandf(sd, "memory-region 0x%lx,0x%lx", lma, size);
+         }
+ #endif      
      }
  
    if (!found_loadable_section)
