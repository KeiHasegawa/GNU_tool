define_split

(define_split
  [(set (cc0)
	(compare (match_operand:QI 0 "hard_addr_reg_operand" "")
		 (const_int 0)))]
  "z_replacement_completed == 2 && GET_MODE (operands[0]) == QImode"
  [(parallel [(set (reg:HI D_REGNUM) (match_dup 1))
	      (set (match_dup 1) (reg:HI D_REGNUM))])
   (set (cc0) (compare (reg:QI D_REGNUM)
		       (const_int 0)))
   (parallel [(set (reg:HI D_REGNUM) (match_dup 1))
	      (set (match_dup 1) (reg:HI D_REGNUM))])]
  "operands[1] = gen_rtx_REG (HImode, REGNO (operands[0]));")

define_split の直後には split 対象とする 3 番地コードを指定する.
上の場合はざっくりと言うと

cc0 := cmp.b(op0, 0)

となる. これに対して

  if (z_replacement_completed == 2 && GET_MODE (operands[0]) == QImode)
    return gen_split_1(insn, operands);


のようなコードが insn-recog.c に生成される.
define_insn, define_expand, define_peephole と同様に 2 つ目には
生成されるプログラムにそのまま複写される条件式を書く.

gen_split_1(rtx_insn*, rtx*) の定義は insn-emit.c に生成される.

rtx_insn *
gen_split_1 (rtx_insn *curr_insn ATTRIBUTE_UNUSED, rtx *operands)
{
...
  operands[1] = gen_rtx_REG (HImode, REGNO (operands[0]));
...  

つまり最後に指定した文字列が
