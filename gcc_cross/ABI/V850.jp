V850 の ABI

(*1) 函数呼び出し
(*2) 函数復帰
(*3) プロローグ
(*4) エピローグ
(*5) 通常の函数の引数と戻り値
(*6) long long を引数にとる函数, 返す函数
(*7) 浮動少数点数を引数にとる函数, 返す函数
(*8) 構造体を引数にとる函数, 構造体を返す函数

(*1) 函数呼び出し

	jarl .+4, r31 ; add 4, r31 ; jmp r10

	上のように 3 命令で行なう. v850-elf-as では ';' はコメントを意味しない.

	疑似コード

	r31 = (jmp r10 命令の次のアドレス)
	pc = r10

	r31 がリンクレジスタの役割りをしている. アーキテクチャがリンクレジスタを決定する
	ことが多いが, V850 ではコンパイラがどのレジスタを使用するか選択することができる.
	
(*2) 函数復帰

	jmp [r31]

(*3) プロローグ

	add -8,sp
	st.w r31,4[sp]
	st.w r29,0[sp]
	addi -128,sp,sp
	mov sp,r29

	上は 128 バイトのローカルエリアを必要とする函数のプロローグ. 
	sp は r3 の別名. r29 をフレームポインタとして使用する.
	
	+---------------+ <- sp_{new}
	|               |
	|               |
	|  local area   |
	|               |
	|               |
	+---------------+ <- r29_{new}
	|    r29_{old}  |
	+---------------+
	|    r31_{old}  |
	+---------------+ <- sp_{old}
	
(*4) エピローグ

	mov r29,sp
	ld.w 132[sp],r31
	ld.w 128[sp],r29
	addi 136,sp,sp
	jmp [r31]

	上は 128 バイトのローカルエリアを使用する函数のエピローグ. なんだか
	フレームポインタを有効利用していないようにも思えるが, 正しく動作する.
	上の命令で sp, r29, r31 を復元し呼び出し元に復帰している.
	
(*5) 通常の函数の引数と戻り値

        第 1 引数 : r6
        第 2 引数 : r7
        第 3 引数 : r8
        第 4 引数 : r9
	第 5 引数以降 : スタックを使用する.

	int f(int a0, int a1, int a2, int a3, int a4, int a5);

	f(10, 11, 12, 13, 14, 15);

	に対して f の先頭アドレスでは

	r6 = 10, r7 = 11, r8 = 12, r9 = 13

	+---------------+ <- sp
	|       14      |
	+---------------+
	|       15      |
	+---------------+

	のようになっている.
	函数の戻り値は r10 にセットされる.


(*6) long long を引数にとる函数, 返す函数

	sizeof(long long) = 8

	引数を 2 つのレジスタを使って渡し, 残りはスタックを使用する.

	long long f(int a0, long long a1, long long a2, long long a3);

	f(0x11223344,
	  0x123456789abcdef0LL, 0x5566778899aabbccLL, 0xddddeeeeffff0000LL)

	に対して f の先頭アドレスでは

	r6 = 11223344, r7 = 0x9abcdef0, r8 = 0x12345678, r9 = 0x99aabbcc

	+---------------+ <- sp
	|  0x55667788   |
	+---------------+
	|  0xffff0000   |
	+---------------+
	|  0xddddeeee   |
	+---------------+

	のようになっている.
	函数の戻り値は r10, r11 レジスタにセットされる.

(*7) 浮動少数点数を引数にとる函数, 返す函数

        sizeof(float) = 4
	sizeof(double) = 8
	sizeof(long double) = 8

	V850 には FPU がないのでソフトウェアで浮動少数点演算を行なっている.
	float に対しては (*5) と同様. double, long double に対しては
	(*6) と同様.

(*8) 構造体を引数にとる函数, 構造体を返す函数

        構造体を引数にとる函数を呼び出すとき, 先頭の 16 バイトが r6, r7, r8, r9
	レジスタにセットされ, 残りはスタックにセットされる.
	構造体を返す函数を呼び出すとき r6 レジスタに戻り値を格納する領域のアドレスがセット
	されて呼び出される.
