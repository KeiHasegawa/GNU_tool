OpenRISC 1000 ABI

(*1) Function call
(*2) Return from function
(*3) Prologue
(*4) Epilogue
(*5) Normal argument and return value
(*6) `long long' argument and return value
(*7) Floating point number argument and return value
(*8) Structure argument and return value


(*1) Function call

	l.jal	func

	Pseudo code

	r9 = (`l.jal' instruction next next address)
	pc = func

	`l.jal' is a delayed brach instruction.

(*2) Return from function

	l.jr	r9

	`l.jr' is a delayed brach instruction.
	
(*3) Prologue

	l.addi	r1, r1, -136
	l.sw	128(r1), r2
	l.addi	r2, r1, 136
	l.sw	132(r1), r9

	Above is prologue for function which uses 128 bytes local area.
	
	+----------------------+ <- r1_{new}
        |                      |
        |                      |
        |      local area      |
        |                      |
        |                      |
	+----------------------+ +128
	|        r2_{old}      |
	+----------------------+ +132
	|        r9_{old}      |
	+----------------------+ <- r1_{old}, r2_{new}


(*4) Epilogue

	l.lwz	r2, 128(r1)
	l.lwz	r9, 132(r1)
	l.addi	r1, r1, 136
	l.jr	r9
	l.nop

	Above is epilogue for function which uses 128 bytes local area.
	`r2', `r9' and `r1' are restored and return to callee.

(*5) Normal argument and return value

	1st : r3
	...
	5th : r8
	6th : use stack

	For example,
	
	int f(int a0, int a1, int a2, int a3, int a4, int a5, int a6, int a7);

	f(10, 11, 12, 13, 14, 15, 16, 17);

	At the start address of `f', registers and stack layout become
	like below:

	r3 = 10, r4 = 11, r5 = 12, r6 = 13, r7 = 14, r8 = 15

	+----------------------+ <- r1
	|           16         |
	+----------------------+ +4
	|           17         |
	+----------------------+ +8

	Function return value is set to `r11'.

(*6) `long long' argument and return value

        sizeof(long long) = 8

	For `long long' type argument, 2 registers are used. Howerver `r8'
	and stack are not used for 1 `long long' type argument. In that case,
	just stack is used.
	For `long long' type return value, `r11' and `r12' are used.
	For example,

	long long f(int a0, long long a1, long long a2, long long a3);

	f(10, 11LL, 12LL, 0x123456789abcdef0LL);

	At the start address of `f', registers and stack layout become
	like below:

	r3 = 10, r4 = 0, r5 = 11, r6 = 0, r7 = 12

	+----------------------+ <- r1
	|      0x12345678      |
	+----------------------+ +4
	|      0x9abcdef0      |
	+----------------------+ +8

(*7) Floating point number argument and return value

	sizeof(float) = 4
	sizeof(double) = 8

	OpenRISC 1000 doens't have FPU so software calculates floating
	point number operation. For `float' same with (*5). For `double'
	or `long double' same with (*6).
	
(*8) Structure argument and return value

	When calling function which takes structure type argument,
	registers are not used, just stack is used.
	When calling function which returns structure type, the address
	for the return value is set to `r3'.
