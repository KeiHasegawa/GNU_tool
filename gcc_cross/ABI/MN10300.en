MN10300 ABI

(*1) Function call
(*2) Return from function
(*3) Prologue
(*4) Epilogue
(*5) Normal argument and return value
(*6) `long long' argument and return value
(*7) Floating point number argument and return value
(*8) Structure argument and return value

(*1) Function call

	call func,[],0

	Pseudo code

	mdr = (`call' instruction next address)
	memory[sp] = mdr
	pc = func

(*2) Return from function

	ret [a3],4

	Pseudo code

	a3 = memory[sp]
	sp += 4
	mdr = memory[sp]
	pc = mdr

(*3) Prologue

	movm [a3],(sp)
	mov sp,a3
	add -140,sp

	Above is prologue of the function which uses 128 bytes local area.
	`a3' register is used as frame pointer.

	+------------------+ <- sp_{new}
	|                  |
	|                  |
	|    local area    |
	|                  |
	|                  |
	+------------------+ <- a3_{new}
	|     a3_{old}     |
	+------------------+ <- sp_{old}
	|  return address  |
	+------------------+

(*4) Epilogue

	mov a3,sp
	ret [a3],4

	Above is prologue and it doesn't depend on the function.
	By above 2 instruction execution, `sp' and `a3 ' registers
	are restored and rturn to the caller.
	
(*5) Normal argument and return value

        1st : d0
	2nd : d1
	3rd : use stack with offset for 1st and 2nd argument

	For example,

	int f(int a, int b, int c, int d);

	f(10, 11, 12, 13);

	At start address of `f', registers and stack layout become like below:

	d0 = 10, d1 = 11
	
	+------------------+ <- sp
	|  return address  |
	+------------------+ +4
	|      ******      |
	+------------------+ +8
	|      ******      |
	+------------------+ +12
	|        12        |
	+------------------+ +16
	|        13        |
	+------------------+ +20

	Function return value is set to d0.
	
(*6) `long long' argument and return value

	sizeof(long long) = 8

	For 1st argument, d0 and d1 is used. For the rest of arguments
	stack is used.

	For example,

	long long f(long long a, long long b);

	f(0x123456789abcdef0LL, 0x1122334455667788LL);

	At start address of `f', registers and stack layout become like below:

	d0 = 0x9abcdef0, d1 = 0x12345678
	
	+------------------+ <- sp
	|  return address  |
	+------------------+ +4
	|      ******      |
	+------------------+ +8
	|      ******      |
	+------------------+ +12
	|     0x55667788   |
	+------------------+ +16
	|     0x11223344   |
	+------------------+ +20

	Function return value is set to d0 and d1.

(*7) Floating point number argument and return value

	sizeof(float) = 4
	sizeof(double) = 8
	sizeof(long double) = 8

	MN10300 doesn't have FPU, so software calculates floating point
	number operation.
	For `float' same with (*5). For `double' and `long double' same
	with (*6).

(*8) Structure argument and return value

        When calling the function which takes structure type argument,
	pass the address of structure according to (*5).

        Return value is set to the address indicated by `d0'.
