ETRAX CRIS ABI

(*1) Function call
(*2) Return from function
(*3) Prologue
(*4) Epilogue
(*5) Normal argument and return value
(*6) `long long' argument and return value
(*7) Floating point number argument and return value
(*8) Structure argument and return value


(*1) Function call

	Jsr func

	Pseudo code

	srp = (`Jsr' instruction next address)
	pc = func

	`srp' is alias of `p11'

(*2) Return from function

	ret

	Pseoudo code

	pc = srp


(*3) Prologue

	subq 4,$sp
	move $srp,[$sp]
	subq 4,$sp
	move.d $r8,[$sp]
	move.d $sp,$r8
	subu.b 128,$sp

	Above is prologue of the funciton which uses 128 bytes local area.


	+------------------+ <- sp_{new}
	|                  |
	|                  |
	|    local area    |
	|                  |
	|                  |
	+------------------+ +128 <- r8_{new}
	|      r8_{old}    |
	+------------------+ +132
	|     srp_{old}    |
	+------------------+ <- sp_{old}

(*4) Epilogue

	move.d $r8,$sp
	move.d [$sp+],$r8
	jump [$sp+]

	Above is epilogue and it doesn't depend on the mount of local area.
	`r8', `srp' and `sp' are recovered and return to callee.

(*5) Normal argument and return value

	1st : r10
	2nd : r11
	3rd : r12
	4th : r13
	5th : use stack

	For example,

	int f(int a0, int a1, int a2, int a3, int a4, int a5, int a6, int a7);

	f(10, 11, 12, 13, 14, 15, 16, 17);

	At the start address of `f', registers and stack layout become
	like below:

	r10 = 10, r11 = 11, r12 = 12, r13 = 13
	
	+------------------+ <- sp
	|        14        |
	+------------------+ +4
	|        15        |
	+------------------+ +8 
	|        16        |
	+------------------+ +12
	|        17        |
	+------------------+ +16

	Fuction return value is set to `r10'.
	

(*6) `long long' argument and return value

        sizeof(long long) = 8

	For `long long' type argument, 2 registers are used and, for the rest
	stack is used. For example,

	long long f(int a0, long long a1, long long a2);

	f(10, 0x123456789abcdef0LL, 0x1122334455667788LL);

	At the start address of `f', registers and stack layout become
	like below:

	r10 = 10, r11 = 0x9abcdef0, r12 = 0x12345678, r13 = 0x55667788
	
	+------------------+ <- sp
	|    0x11223344    |
	+------------------+ +4

	Function return value is set to `r10' and `r11'.
	
(*7) Floating point number argument and return value

        sizeof(float) = 4
	sizeof(double) = sizeof(long double) = 8

	ETRAX CRIS doesn't hav FPU so software calculates floating point
	number operation. For `float' same with (*5), for `double' or
	`long double' wame with (*6).

(*8) Structure argument and return value

	When calling function which takes structure type, no register
	is used, stack is used.
	When calling function which returns struct type, the address of
	return value is set to `r10'.
