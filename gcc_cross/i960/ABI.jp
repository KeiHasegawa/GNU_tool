i960 の ABI

(*1) レジスタの別名

     r1  : sp
     r15 : fp
     r2  : リンクポインタ

(*2) 函数呼び出し

	callx	fun

	疑似コード

	r2 := (callx 命令の次のアドレス)
	[g15+0] := r0
	[g15+4] := r1
	[g15+8] := r2
	...
	[g15+60] := r15
	r0 := g15
	r1 := g15 + 64
	pc := fun

(*3) 函数復帰

	ret

	疑似コード

	g15 := r0
	r0 := [g15+0]
	r1 := [g15+4]
	...
	r15 := [g15+60]
	pc := r2

(*4) プロローグ

        以下は 16 バイトのローカル領域を使用する函数のプロローグ

	addo	16, sp, sp

	ポイントは callx, ret 命令の仕様にある. またスタックがアドレスの高い
	方に成長することにも注意.

(*5) エピローグ

        以下は使用するローカル領域に依存しない函数のエピローグ

        ret

(*6) 通常の函数の呼び出し.

        第 1 引数 : g0
	第 2 引数 : g1
	...
	第 12 引数 : g11
	第 13 引数 : g14 相対 48 にセットされる.
	第 14 引数 : g14 相対 52 にセットされる.
	...

	函数の戻り値は g0 にセットされる.

(*7) long long を引数に取る, 返す函数呼び出し

        レジスタがペアで使用される. g11 と g14 相対 48 に跨って引数がセットされることは
	ない.

	函数の戻り値は g0, g1 にセットされる(未確認).
	