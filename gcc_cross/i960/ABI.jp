i960 の ABI

(*1) レジスタ

     r1  : sp (スタックポインタ)
     g15 : fp (フレームポインタ)
     r2  : リンクポインタ
     r0  : g15 を保存
     g14 : 函数に引数を渡すときスタックで渡される引数の相対位置を指す

(*2) 函数呼び出し

	callx	fun

	疑似コード

	r2 := (callx 命令の次のアドレス)
	[fp+0] := r0
	[fp+4] := r1
	[fp+8] := r2
	...
	[fp+60] := r15
	r0 := fp
	r1 := fp + 64
	pc := fun

	fun の先頭でのスタックのレイアウトは以下のようになっている.

     +0	+---------------+ <- fp
	|	r0	|
     +4	+---------------+
	|	r1	|
     +8	+---------------+
	|		|
	|		|
	~	...	~
	|		|
	|		|
	+---------------+
	|	r15	|
    +64	+---------------+ <- sp

    	スタックはアドレスの高い方向に成長する.

(*3) 函数復帰

	ret

	疑似コード

	fp := r0
	r0 := [fp+0]
	r1 := [fp+4]
	...
	r15 := [fp+60]
	pc := r2

(*4) プロローグ

        以下は 16 バイトのローカル領域を使用する函数のプロローグ

	mov     fp, sp
	addo	16, sp, sp

	ポイントは callx, ret 命令の仕様にある. またスタックがアドレスの高い
	方に成長することにも注意.

(*5) エピローグ

        以下は使用するローカル領域に依存しない函数のエピローグ

        ret

(*6) 通常の函数の呼び出し.

        第 1 引数 : g0
	第 2 引数 : g1
	...
	第 12 引数 : g11
	第 13 引数 : g14 相対 48 にセットされる.
	第 14 引数 : g14 相対 52 にセットされる.
	...

	函数の戻り値は g0 にセットされる.

(*7) long long を引数に取る, 返す函数呼び出し

        レジスタがペアで使用される. g11 と g14 相対 48 に跨って引数がセットされることは
	ない.

	函数の戻り値は g0, g1 にセットされる(未確認).
	