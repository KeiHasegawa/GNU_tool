ETRAX_CRIS simulator memory

In `sim_open' function, [0, 0x2000) is allocated like below:

  if (sim_core_read_buffer (sd, NULL, read_map, &c, startmem, 1) == 0)
    sim_do_commandf (sd, "memory region 0x%lx,0x%lx", startmem,
		     endmem - startmem);

Except above, while loading target program, allocate memory like below:

*** gdb-10.2.arm-elf/sim/common/sim-load.c	2021-04-25 13:06:26.000000000 +0900
--- gdb-10.2.cris-elf/sim/common/sim-load.c	2021-12-03 10:16:00.000000000 +0900
***************
*** 133,143 ****
--- 133,150 ----
  		}
  	      data_count += size;
  	      bfd_get_section_contents (result_bfd, s, buffer, 0, size);
+    	      sim_do_commandf(sd, "memory-region 0x%llx,0x%llx", lma, size);
  	      do_write (sd, lma, buffer, size);
  	      found_loadable_section = 1;
  	      free (buffer);
  	    }
  	}
+         else if (s->flags & SEC_ALLOC) {
+           bfd_vma lma = lma_p ? bfd_section_lma(s) : bfd_section_vma(s);
+           bfd_size_type size = bfd_section_size(s);
+           sim_do_command(sd, "memory-fill 0xcc");
+           sim_do_commandf(sd, "memory-region 0x%llx,0x%llx", lma, size);
+         }
      }
  
    if (!found_loadable_section)

As this result, memory will be allocated for `.text', `.rodata', `.data'
and `.bss' section.

Users have to assign memory for stack.
