D10V の ABI

(*1) 函数呼び出し
(*2) 函数復帰
(*3) プロローグ
(*4) エピローグ


(*1) 函数呼び出し

	bl	fun

	疑似コード

	r13 := (bl 命令の次のアドレス) >> 2
	pc := fun
	
(*2) 函数復帰

	jmp	r13

	疑似コード

	pc := r13 << 2

(*3) プロローグ

        以下は 128 バイトのローカル領域を使用する函数のプロローグ

	st	r13, @-sp
	st	r14, @-sp
	sub	sp, 128
	mv	r14, sp

	+---------------+ <- sp_{new}, r14_{new}
	|		|
	|		|
	~		~
	|		|
	|		|
   +128	+---------------+
	|    r14_{old}	|
   +132	+---------------+
	|    r13_{old}	|
   +136	+---------------+ <- sp_{old}


(*4) エピローグ

        以下は 128 バイトのローカル領域を使用する函数のエピローグ

	addi	sp, 128
	ld	r14, @sp+
	ld	r13, @sp+
	jmp	r13

(*5) 通常の函数の呼び出し

        sizeof(int) = 2

	第 1 引数 : r0
	第 2 引数 : r1
	第 3 引数 : r2
	第 4 引数 : r3
	第 5 引数以降 : スタックを使用する.

	例えば

	int f(int a, int b, int c, int d, int e);

	f(10, 11, 12, 13, 14);

	に対して f の先頭アドレスでは

	r0 = 10, r1 = 11, r2 = 12, r3 = 13

     +0	+---------------+ <- sp
	|	14	|
     +2	+---------------+

	のようになっている.
	
(*6) long long を引数とする函数呼び出し. long long を返す函数呼び出し

	sizeof(long) = 4
	sizeof(long long) = 8

	レジスタがペアで使用されるが r1, r2 がペアで使用されることはない.

	long f(int a, long b, long c);

	f(1, 0x12345678L, 0x9abcdef0L);

	に対して f の先頭アドレスでは

	r0 = 1, r2 = 0x1234, r3 = 0x5678
	
     +0	+---------------+ <- sp
	|     0x9abc	|
     +2	+---------------+
	|     0xdef0	|
     +4	+---------------+

	のようになっている.

	long long は第 1 引数ならば (r0, r1, r2, r3) に値がセットされて
	函数が呼び出されるが, それ以外ならばスタックが使用される.

	long を返す函数の戻り値は r0, r1 にセットされる. long long を返す
	函数の戻り値は r0, r1, r2, r3 にセットされる.
	
 