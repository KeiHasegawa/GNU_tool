MN10300 の ABI

(*1) 函数呼び出し
(*2) 函数復帰
(*3) プロローグ
(*4) エピローグ
(*5) 通常の函数の引数と戻り値
(*6) long long を引数にとる函数, 返す函数
(*7) 浮動少数点数を引数にとる函数, 返す函数
(*8) 構造体を引数にとる函数, 構造体を返す函数

(*1) 函数呼び出し

	call func,[],0

	疑似コード

	mdr = (call 命令の次のアドレス)
	memory[sp] = mdr
	pc = func

(*2) 函数復帰

	mov a3,sp
	ret [a3],4

	疑似コード

	a3 = memory[sp]
	sp += 4
	mdr = memory[sp]
	pc = mdr

(*3) プロローグ

	movm [a3],(sp)
	mov sp,a3
	add -140,sp

	上は 128 バイトのローカルエリアを必要とする函数のプロローグ.
	a3 レジスタをフレームポインタのように使用する.

	+------------------+ <- sp_{new}
	|                  |
	|                  |
	|    local area    |
	|                  |
	|                  |
	+------------------+ <- a3_{new}
	|     a3_{old}     |
	+------------------+ <- sp_{old}
	|  return address  |
	+------------------+

(*4) エピローグ

	mov a3,sp
	ret [a3],4

	上は函数のプロローグで, ローカルエリアの領域に依存しない. この 2 つの命令の
	実行で sp, a3 を函数が呼び出された状態に復元し, そして呼び出し元へ戻る.
	
(*5) 通常の函数の引数と戻り値

        第 1 引数 : d0
	第 2 引数 : d1
	第 3 引数以降 : 第 1 引数と第 2 引数の分を開けてスタックを使用する.

	int f(int a, int b, int c, int d);

	f(10, 11, 12, 13);

	のようなコードに対して f の先頭では

	d0 = 10, d1 = 11
	
	+------------------+ <- sp
	|  return address  |
	+------------------+ +4
	|      ******      |
	+------------------+ +8
	|      ******      |
	+------------------+ +12
	|        12        |
	+------------------+ +16
	|        13        |
	+------------------+ +20

	のようになっている.
	函数の戻り値は d0 レジスタが使用される.
	
(*6) long long を引数にとる函数, 返す函数

	sizeof(long long) = 8

	第 1 引数には d0 と d1 が使用される. それ以外は (*5) と同様にスタックが
	使用される.

	long long f(long long a, long long b);

	f(0x123456789abcdef0LL, 0x1122334455667788LL);

	に対して f の先頭では

	d0 = 0x9abcdef0, d1 = 0x12345678
	
	+------------------+ <- sp
	|  return address  |
	+------------------+ +4
	|      ******      |
	+------------------+ +8
	|      ******      |
	+------------------+ +12
	|     0x55667788   |
	+------------------+ +16
	|     0x11223344   |
	+------------------+ +20

	のようになっている.
	函数の戻り値は d0 と d1 が使用される.

(*7) 浮動少数点数を引数にとる函数, 返す函数

	sizeof(float) = 4
	sizeof(double) = 8
	sizeof(long double) = 8

	MN10300 には FPU がないのでソフトウェアで計算している.
	float に対しては (*5) と同様. double, long double に対しては (*6)
	と同様である.

(*8) 構造体を引数にとる函数, 構造体を返す函数

        構造体を引数にとる函数を呼び出すとき, (*5) に従って引数のアドレスを渡す.
	構造体を返す函数を呼び出すとき, 戻り値を格納するアドレスを d0 に
	セットして呼び出す.
