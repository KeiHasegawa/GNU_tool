*** gdb-10.2.org/gdb/mn10300-tdep.c	2021-04-25 13:06:26.000000000 +0900
--- gdb-10.2.mn10300-elf/gdb/mn10300-tdep.c	2022-01-21 16:33:11.000000000 +0900
***************
*** 238,245 ****
  		      struct type *type, struct regcache *regcache,
  		      gdb_byte *readbuf, const gdb_byte *writebuf)
  {
!   if (mn10300_use_struct_convention (type))
!     return RETURN_VALUE_STRUCT_CONVENTION;
  
    if (readbuf)
      mn10300_extract_return_value (gdbarch, type, regcache, readbuf);
--- 238,251 ----
  		      struct type *type, struct regcache *regcache,
  		      gdb_byte *readbuf, const gdb_byte *writebuf)
  {
!   if (mn10300_use_struct_convention (type)) {
!     if (readbuf) {
!       ULONGEST addr;
!       regcache_raw_read_unsigned(regcache, 4, &addr);
!       read_memory(addr, readbuf, TYPE_LENGTH(type));
!     }
!     return RETURN_VALUE_ABI_RETURNS_ADDRESS;
!   }
  
    if (readbuf)
      mn10300_extract_return_value (gdbarch, type, regcache, readbuf);
***************
*** 301,309 ****
  }
  
  static struct type *
! mn10300_register_type (struct gdbarch *gdbarch, int reg)
  {
!   return builtin_type (gdbarch)->builtin_int;
  }
  
  /* The breakpoint instruction must be the same size as the smallest
--- 307,322 ----
  }
  
  static struct type *
! mn10300_register_type (struct gdbarch *gdbarch, int regno)
  {
!   switch (regno) {
!   case E_PC_REGNUM: case E_MDR_REGNUM:
!     return builtin_type(gdbarch)->builtin_func_ptr;
!   case E_SP_REGNUM: case E_A3_REGNUM:
!     return builtin_type(gdbarch)->builtin_data_ptr;
!   default:
!     return builtin_type(gdbarch)->builtin_int;
!   }
  }
  
  /* The breakpoint instruction must be the same size as the smallest
