cc1 の雛形

「AARCH64」=>「cc1 の雛形」=>「メモ」 を参照.
AARCH64 と同様の手順で cc1 の雛形をビルドすることができる.

(*) 備考
ビルドの手順で AARCH64 では以下のようにパッチを適用する必要があったが

% patch -p1 < ../gcc-10.2.0.aarch64-elf.mine.diff

MN10300 ではたまたま差分がなかったため, この手順は必要なし.

開発記録.

MN10300 も Blackfin や Moxie と似ているスタックフレーム.

(1) マクロ TARGET_LRA_P の宣言の追加.
(2) マクロ TARGET_LEGITIMATE_ADDRESS_P の定義となる函数の修正
(3) マクロ ARG_POINTER_REGNUM と ELIMINABLE_REGS の宣言の修正
    函数 INITIAL_ELIMINATION_OFFSET の修正
(4) マクロ REG_PARM_STACK_SPACE の宣言の追加
(5) 函数 FIRST_PARM_OFFSET では 0 を返す
(6) マクロ OUTGOING_REG_PARM_STACK_SPACE, ACCUMULATE_OUTGOING_ARGS の宣言の追加.
(7) マクロ FRAME_GROWS_DOWNWARD を 1 に define する.
(8) プロローグでフレームサイズの他に函数呼び出しの引数の分を加算してスタックポインタをずらす.
(9) マクロ FRAME_POINTER_CFA_OFFSET の宣言の追加

Moxie での解析結果を参考にして上の (1) から (9) の対処をしたが現状
f にステップインしたとき


(mn10300-elf-gdb) s
f (a=6, b=-858993460) at a.c:5
(mn10300-elf-gdb)

のように引数の表示結果が正しくない. 4 バイトずれているように見える.

_f:
.LFB3:
.LM1:
	movm	[a3], (sp)
.LCFI0:
	mov	sp, a3
.LCFI1:
	mov	d0, (8, a3)
	mov	d1, (12, a3)
...
 <2><c9>: 省略番号: 6 (DW_TAG_formal_parameter)
    <ca>   DW_AT_name        : a
    <cc>   DW_AT_decl_file   : 1
    <cd>   DW_AT_decl_line   : 3
    <ce>   DW_AT_decl_column : 11
    <cf>   DW_AT_type        : <0x83>
    <d3>   DW_AT_location    : 2 byte block: 91 8 	(DW_OP_fbreg: 8)
 <2><d6>: 省略番号: 6 (DW_TAG_formal_parameter)
    <d7>   DW_AT_name        : b
    <d9>   DW_AT_decl_file   : 1
    <da>   DW_AT_decl_line   : 3
    <db>   DW_AT_decl_column : 18
    <dc>   DW_AT_type        : <0x83>
    <e0>   DW_AT_location    : 2 byte block: 91 c 	(DW_OP_fbreg: 12)

なのでここは意図した結果にはなっている.

オリジナルの cc1 について同様のことを確認してみた

_f:
.LFB3:
	.file 1 "a.c"
	.loc 1 4 1
	movm [a3],(sp)
.LCFI0:
	mov sp,a3
.LCFI1:
	mov d0,(8,a3)
	mov d1,(12,a3)

 <2><c9>: 省略番号: 6 (DW_TAG_formal_parameter)
    <ca>   DW_AT_name        : a
    <cc>   DW_AT_decl_file   : 1
    <cd>   DW_AT_decl_line   : 3
    <ce>   DW_AT_decl_column : 11
    <cf>   DW_AT_type        : <0x83>
    <d3>   DW_AT_location    : 2 byte block: 91 4 	(DW_OP_fbreg: 4)
 <2><d6>: 省略番号: 6 (DW_TAG_formal_parameter)
    <d7>   DW_AT_name        : b
    <d9>   DW_AT_decl_file   : 1
    <da>   DW_AT_decl_line   : 3
    <db>   DW_AT_decl_column : 18
    <dc>   DW_AT_type        : <0x83>
    <e0>   DW_AT_location    : 2 byte block: 91 8 	(DW_OP_fbreg: 8)

これは...帳尻を合わせていたってことか.

現状

#define FRAME_POINTER_CFA_OFFSET(FDECL) 0

のようにしているが

#define FRAME_POINTER_CFA_OFFSET(FDECL) 4

で gdb が期待通り動作していることを確認した.
