現状 -g オプションなしでコンパイラの生成したプログラムをアセンブル, リンクして objdump に入力
させると以下のように警告メッセージを出力している:

% ns32k-elf-gcc -S test.c
% ns32k-elf-as -o test.o test.s -g
% ns32k-elf-ld -o test.elf ../default.o test.o -T ../default.x
% ns32k-elf-objdump -x -d -g test.elf > test.objdump
ns32k-elf-objdump: Warning: DW_FORM_strp offset too big: 5b80
...
%

そしてその生成ファイルを ns32k-elf-gdb に読み込ませると以下のようにエラーしている:
% ns32k-elf-gdb -q -x gdbcom test.elf > test.log
DW_FORM_strp pointing outside of .debug_str section [in module /home/khasegawa/lang/53_GNU_tool/gcc_cross/NS32000/test/test003/test.elf]
%

そこでまず異常が発生している箇所を ns32k-elf-objdump の視点で確認してみる.

% ns32k-elf-objdump --dwarf=info test.elf
...
 <0><31>: Abbrev Number: 1 (DW_TAG_compile_unit)
    <32>   DW_AT_stmt_list   : 0x3e
    <36>   DW_AT_low_pc      : 0x110
    <3a>   DW_AT_high_pc     : 0x2510
    <3e>   DW_AT_name        :ns32k-elf-objdump: Warning: DW_FORM_strp offset too big: 5b80      ★
...

.debug_info セクションに異常があるらしい.

% ns32k-elf-objdump -s test.elf
...
Contents of section .debug_info:
 0000 22000000 02000000 00000401 00000000  "...............
 0010 00010000 00110000 00000000 0d000000  ................
 0020 4d000000 01802200 00000200 00000000  M.....".........
 0030 04013e00 00001001 00001025 0000805b  ..>........%...[   ★
 0040 0000875b 0000875b 00000180           ...[...[....    
...
%

このファイルを生成しているのは ns32k-elf-ld なのでまずはその視点から調べてみる.

% cat z3
b bfd_set_section_contents
command
if ((int)strcmp(section->name, ".debug_info"))
continue
end
end
(gdb) so z3
(gdb) run
...
上でセットしたブレークポイントに 2 回目にヒットしたとき:
Breakpoint 14, bfd_set_section_contents (abfd=0x817ecd8, section=0x8184c10, location=0x8180530, offset=38, count=38) at section.c:1496
(gdb) x/38bx location
0x8180530:	0x22	0x00	0x00	0x00	0x02	0x00	0x00	0x00
0x8180538:	0x00	0x00	0x04	0x01	0x3e	0x00	0x00	0x00
0x8180540:	0x10	0x01	0x00	0x00	0x10	0x25	0x00	0x00
0x8180548:	0x80	0x5b	0x00	0x00	0x87	0x5b	0x00	0x00 ★
0x8180550:	0x87	0x5b	0x00	0x00	0x01	0x80
(gdb)

アドレス 0x8180548 に 5b80 がセットされている. そこで以下のように修正してみた:

bfd_reloc_status_type
_bfd_ns32k_reloc_disp (bfd *abfd,
		       arelent *reloc_entry,
		       struct bfd_symbol *symbol,
		       void * data,
		       asection *input_section,
		       bfd *output_bfd,
		       char **error_message)
{
+ const char* n1 = input_section->name;
+ if (strcmp(n1, ".debug_info") == 0)
+   return bfd_reloc_ok;
  return do_ns32k_reloc (abfd, reloc_entry, symbol, data, input_section,
			 output_bfd, error_message,
			 _bfd_ns32k_get_displacement,
			 _bfd_ns32k_put_displacement);
}

この修正方法も
「"Debug info is corrupted, abbrev offset (ffffffee) is larger than abbrev section size (28)" のエラーの調査」
と同様に同じ理由で正しい対処とはとても言えない.
