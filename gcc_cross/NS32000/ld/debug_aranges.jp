現状 -g オプションなしでコンパイラの生成したプログラムをアセンブル, リンクして objdump に入力
させると以下のように警告メッセージを出力している:

% ns32k-elf-objdump --dwarf=aranges test.elf 
...
    Address    Length
    00000100 00000010 
    00000000 00000000 
ns32k-elf-objdump: Warning: .debug_info offset of 0x6 in .debug_aranges section does not point to a CU header.        ★
  Length:                   28
...
% ns32k-elf-objdump -s test.elf
...
Contents of section .debug_aranges:
 0000 1c000000 02000000 00000400 00000000  ................
 0010 00010000 10000000 00000000 00000000  ................
 0020 1c000000 02000600 00000400 00000000  ................       ★
 0030 10010000 24000000 00000000 00000000  ....$...........
...

% cat z3
b bfd_set_section_contents
command
if ((int)strcmp(section->name, ".debug_aranges"))
continue
end
end
%
(gdb) run
...
上でセットしたブレークポイントに 2 回目にヒットしたとき:
Breakpoint 16, bfd_set_section_contents (abfd=0x817ecd8, section=0x8184d90, location=0x8180560, offset=32, count=32) at section.c:1496
(gdb) x/32bx location
0x8180560:	0x1c	0x00	0x00	0x00	0x02	0x00	0x06	0x00 ★
0x8180568:	0x00	0x00	0x04	0x00	0x00	0x00	0x00	0x00
0x8180570:	0x10	0x01	0x00	0x00	0x24	0x00	0x00	0x00
0x8180578:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
(gdb)

0x8180566 に 6 がセットされている.
そこで以下のように修正:

bfd_reloc_status_type
_bfd_ns32k_reloc_imm (bfd *abfd,
		      arelent *reloc_entry,
		      struct bfd_symbol *symbol,
		      void * data,
		      asection *input_section,
		      bfd *output_bfd,
		      char **error_message)
{
  const char* n1 = input_section->name;
  const char* n2 = symbol->name;
  if (strcmp(n1, ".debug_info") == 0 && strcmp(n2, ".debug_abbrev") == 0)
    return bfd_reloc_ok;
+ if (strcmp(n1, ".debug_aranges") == 0)
+   return bfd_reloc_ok;
  return do_ns32k_reloc (abfd, reloc_entry, symbol, data, input_section,
			 output_bfd, error_message, _bfd_ns32k_get_immediate,
			 _bfd_ns32k_put_immediate);
}

やはりこれも対処として適切とは言えない.
