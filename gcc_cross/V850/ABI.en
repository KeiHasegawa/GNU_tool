V850 ABI

(*1) Function call
(*2) Return from function
(*3) Prologue
(*4) Epilogue
(*5) Normal argument and return value
(*6) `long long' argument and return value
(*7) Floating point number argument and return value
(*8) Structure argument and return value

(*1) Function call

	jarl .+4, r31 ; add 4, r31 ; jmp r10

	Normally function call is done like above, where ';' doesn't
	mean comment start (as far as `v850-elf-as').

	Pseudo code

	r31 = (`jmp r10' instruction next address)
	pc = r10

	r31 is used as link register. Normally architecture decides
	link register, but at V850, a compiler can chose it.
	
(*2) Return from function

	jmp [r31]

(*3) Prologue

	add -8,sp
	st.w r31,4[sp]
	st.w r29,0[sp]
	addi -128,sp,sp
	mov sp,r29

	Above is prologue for the function which uses 128 bytes local area.
	sp is alias of r3. r29 is used as frame pointer.
	
	+---------------+ <- sp_{new}, r29_{new}
	|               |
	|               |
	|   local area  |
	|               |
	|               |
	+---------------+
	|   r29_{old}   |
	+---------------+
	|   r31_{old}   |
	+---------------+ <- sp_{old}
	
(*4) Epilogue

	mov r29,sp
	ld.w 132[sp],r31
	ld.w 128[sp],r29
	addi 136,sp,sp
	jmp [r31]

	Above is epilogue for the function which uses 128 bytes local area.
	By above instructions, sp, r29 and r31 are restored and jump
	to callee.
	
(*5) Normal argument and return value

        1st : r6
        2nd : r7
        3rd : r8
        4th : r9
	5th : use stack

	For example,

	int f(int a0, int a1, int a2, int a3, int a4, int a5);

	f(10, 11, 12, 13, 14, 15);

	At start address of `f', registers and stack layout become like below:

	r6 = 10, r7 = 11, r8 = 12, r9 = 13

	+---------------+ <- sp
	|       14      |
	+---------------+
	|       15      |
	+---------------+

	Function return value is set to r10.

(*6) `long long' argument and return value

	sizeof(long long) = 8

	For long long type arugment, 2 registers are used and the rest
	are passed by using stack.
	For example,

	long long f(int a0, long long a1, long long a2, long long a3);

	f(0x11223344,
	  0x123456789abcdef0LL, 0x5566778899aabbccLL, 0xddddeeeeffff0000LL)

	At start address of `f', registers and stack layout become like below:

	r6 = 11223344, r7 = 0x9abcdef0, r8 = 0x12345678, r9 = 0x99aabbcc

	+---------------+ <- sp
	|  0x55667788   |
	+---------------+
	|  0xffff0000   |
	+---------------+
	|  0xddddeeee   |
	+---------------+

	Function return value is set to r10 and r11.

(*7) Floating point number argument and return value

        sizeof(float) = 4
	sizeof(double) = 8
	sizeof(long double) = 8

	V850 doesn't have FPU, so software calculates floating point number
	operation. For `float' same with (*5). For `double' and `long double'
	same with (*6).

(*8) Structure argument and return value

        When calling the function which takes structure type argument,
	the first 16 btyes are set to r6, r7, r8, r9 and the rest are
	set to stack.
	When calling the function which returns structure type,
	the address of the return value are is set to r6.
