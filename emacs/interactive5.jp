interactive(その5)

interactive やその他についてこれまで判明したことが分かる例をまとめた.
まずは単独で以下の式を評価する:

(global-set-key "\C-x\C-p" 'interactive-test)

これで C-x C-p としても interactive-test が定義されていないので
ミニバッファには以下のように表示される:

Wrong type argument: commandp, interactive-test

しかしこれは期待した結果である. それでは interactive-test を改めて定義
しよう.

(defun interactive-test ()
       "test of interactive"
       (interactive)
       (message "hello world"))

この式を評価する. そして C-x C-p としてみよう. ミニバッファに

hello world

と表示されるだろう. 今度は以下の式を評価してみる:

(defun interactive-test (n)
       "test of interactive `p' format"
       (interactive "p")
       (message "hello world %d" (+ n 10)))

そして C-x C-p としてみよう. ミニバッファに

hello world 11

と表示される. 引数を省略した場合は 1 がセットされるらしい. それでは
C-u 10 C-x C-p としてみよう. ミニバッファに

hello world 20

と表示される. 明示的に引数を指定することもできる.

interactive-test は Lisp の式から以下のように呼び出すことができる:

(interactive-test 5)

上の式を評価すると

"hello world 15"

のようにダブルクォーテーション付きでミニバッファに表示される.
C-u 5 C-x C-p との違いがある.

引数を意図的に省略した:

(interactive-test)

上を評価するとミニバッファに

Wrong number of arguments: (lambda (n) "test of interactive `p' format" (interactive "p") (message "hello world %d" (+ n 10))), 0

のように表示される. Lisp の式から呼ばれた場合に引数を省略しても
それなりに動作するようにするには以下のようにする

(defun interactive-test (&optional n)
       "test of interactive `p' format"
       (interactive "p")
       (if n
              (message "hello world %d" (+ n 10))
	      (message "hello world")))

改めて以下を評価してみる:

(interactive-test)

ミニバッファにダブルクォーテーション付きで "hello world" と表示される.
