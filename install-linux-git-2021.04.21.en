linux git 2.31.1 install memo

(*1) Download git
(*2) Download autoconf, build and install
(*3) Build git (Part 1)
(*4) Download zlib, build and install
(*5) Build git (Part 2)
(*6) Download gettext, build and install
(*7) Build git (Part 3)
(*8) Validation => Error
(*9) Refer to stack overflow


(*1) Download git
% cd
% wget -q http://cygwin.mirror.constant.com/x86_64/release/git/git-2.31.1-1-src.tar.xz
% xz -d -c git-2.31.1-1-src.tar.xz | tar xf -
% cd git-2.31.1-1.src
% gunzip -c git-v2.31.1.tar.gz | tar xf -
% cd git-v2.31.1

Here, I noticed that there was configure.ac but was not configure.

And more, I noticed that autoconf was not installed, so decided to
install autoconf. 

(*2) Download autoconf, build and install
% cd
% wget -q http://cygwin.mirror.constant.com/x86_64/release/gcc-tools-epoch2-autoconf/gcc-tools-epoch2-autoconf-2.64-2-src.tar.bz2
% bunzip2 -c gcc-tools-epoch2-autoconf-2.64-2-src.tar.bz2 | tar xf -
% bunzip2 -c autoconf-2.64.tar.bz2 | tar xf -
% cd autoconf-2.64
% ./configure
% make
% sudo make install
% ls -l /usr/local/bin/autoconf
# Confirmed

(*3) Build git (Part 1)
% cd ~/git-2.31.1-1.src/git-v2.31.1
% autoconf
% ls -l configure
% ./configure
% make

Error occured because there was not `zlib.h', so decided to install zlib.

(*4) Download zlib, build and install
% cd
% wget -q http://cygwin.mirror.constant.com/x86_64/release/zlib/zlib-1.2.8-3-src.tar.xz
% xz -d -c zlib-1.2.8-3-src.tar.xz | tar xf -
% cd zlib-1.2.8-3.src
% gunzip -c zlib-1.2.8.tar.gz | tar xf -
% cd zlib-1.2.8
% ./configure
% make
# This developper specifies `-O3' and doesn not specifies `-g'!
% ls -l /usr/local/lib/libz.a /usr/local/include/zlib.h
# Confirmed

(*5) Build git (Part 2)

Restart to build:

% cd ~/git-2.31.1-1.src/git-v2.31.1
% make

Error occured because `msgfmt' command is not found.

(*6) Download gettext, build and install

     I knew that msgfmt is one of gettext family programs, so decided
     to install gettext.

% cd
% wget -q http://cygwin.mirror.constant.com/x86_64/release/gettext/gettext-0.19.8.1-2-src.tar.xz
% xz -d -c gettext-0.19.8.1-2-src.tar.xz | tar xf -
% cd gettext-0.19.8.1-2.src
% xz -d -c gettext-0.19.8.1.tar.xz | tar xf -
% cd gettext-0.19.8.1
% ./configure
% make
% sudo make install
...
libtool: relink: gcc -shared  -fPIC -DPIC ... -fopenmp -Wl,-soname -Wl,libgettextsrc-0.19.8.1.so -o .libs/libgettextsrc-0.19.8.1.so
/usr/bin/ld: .libs/libgettextsrc_la-message.o(.debug_frame+0x504): reloc against `.debug_frame': error 2

Error occured. I tried to change the same directory and to execute the same
command:

% cd ~/gettext-0.19.8.1-2.src/gettext-0.19.8.1/gettext-tools/src
% gcc -shared  -fPIC -DPIC  .libs/libgettextsrc_la-message.o .libs/libgettextsrc_la-po-error.o .libs/libgettextsrc_la-po-xerror.o .libs/libgettextsrc_la-read-catalog-abstract.o .libs/libgettextsrc_la-po-lex.o .libs/libgettextsrc_la-po-gram-gen.o .libs/libgettextsrc_la-po-charset.o .libs/libgettextsrc_la-read-po.o .libs/libgettextsrc_la-read-properties.o .libs/libgettextsrc_la-read-stringtable.o .libs/libgettextsrc_la-open-catalog.o .libs/libgettextsrc_la-dir-list.o .libs/libgettextsrc_la-str-list.o .libs/libgettextsrc_la-read-catalog.o .libs/libgettextsrc_la-color.o .libs/libgettextsrc_la-write-catalog.o .libs/libgettextsrc_la-write-properties.o .libs/libgettextsrc_la-write-stringtable.o .libs/libgettextsrc_la-write-po.o .libs/libgettextsrc_la-msgl-ascii.o .libs/libgettextsrc_la-msgl-iconv.o .libs/libgettextsrc_la-msgl-equal.o .libs/libgettextsrc_la-msgl-cat.o .libs/libgettextsrc_la-msgl-header.o .libs/libgettextsrc_la-msgl-english.o .libs/libgettextsrc_la-msgl-check.o .libs/libgettextsrc_la-file-list.o .libs/libgettextsrc_la-msgl-charset.o .libs/libgettextsrc_la-po-time.o .libs/libgettextsrc_la-plural-exp.o .libs/libgettextsrc_la-plural-eval.o .libs/libgettextsrc_la-plural-table.o .libs/libgettextsrc_la-sentence.o .libs/libgettextsrc_la-format.o .libs/libgettextsrc_la-format-c.o .libs/libgettextsrc_la-format-sh.o .libs/libgettextsrc_la-format-python.o .libs/libgettextsrc_la-format-python-brace.o .libs/libgettextsrc_la-format-lisp.o .libs/libgettextsrc_la-format-elisp.o .libs/libgettextsrc_la-format-librep.o .libs/libgettextsrc_la-format-scheme.o .libs/libgettextsrc_la-format-java.o .libs/libgettextsrc_la-format-csharp.o .libs/libgettextsrc_la-format-awk.o .libs/libgettextsrc_la-format-pascal.o .libs/libgettextsrc_la-format-ycp.o .libs/libgettextsrc_la-format-tcl.o .libs/libgettextsrc_la-format-perl.o .libs/libgettextsrc_la-format-perl-brace.o .libs/libgettextsrc_la-format-php.o .libs/libgettextsrc_la-format-gcc-internal.o .libs/libgettextsrc_la-format-gfc-internal.o .libs/libgettextsrc_la-format-qt.o .libs/libgettextsrc_la-format-qt-plural.o .libs/libgettextsrc_la-format-kde.o .libs/libgettextsrc_la-format-kde-kuit.o .libs/libgettextsrc_la-format-boost.o .libs/libgettextsrc_la-format-lua.o .libs/libgettextsrc_la-format-javascript.o .libs/libgettextsrc_la-read-desktop.o .libs/libgettextsrc_la-locating-rule.o .libs/libgettextsrc_la-its.o .libs/libgettextsrc_la-search-path.o   -Wl,-rpath -Wl,/usr/local/lib -L/usr/local/lib -lgettextlib -lm -ltermcap -lc  -g -O2   -fopenmp -Wl,-soname -Wl,libgettextsrc-0.19.8.1.so -o .libs/libgettextsrc-0.19.8.1.so
% ls -l .libs/libgettextsrc-0.19.8.1.so

Normally done. Mysterious.

% cd ~/gettext-0.19.8.1-2.src/gettext-0.19.8.1
% sudo make install

Again error occured. 

% cd ~/gettext-0.19.8.1-2.src/gettext-0.19.8.1/gettext-tools/src
% make install
libtool: install: /usr/bin/install -c .libs/libgettextsrc-0.19.8.1.soT /usr/local/lib/libgettextsrc-0.19.8.1.so
/usr/bin/install: cannot create regular file `/usr/local/lib/libgettextsrc-0.19.8.1.so': Permission denied
% sudo /usr/bin/install -c .libs/libgettextsrc-0.19.8.1.so /usr/local/lib
% ls -l /usr/local/lib/libgettextsrc-0.19.8.1.so

OK. Normally done.

% su
root # cd /home/khasegawa/gettext-0.19.8.1-2.src/gettext-0.19.8.1
root # make install

Normally done.

% ls -l /usr/local/bin/msgfmt
# Confirmed
 
(*7) Build git (Part 3)

Restart to build:

% cd ~/git-2.31.1-1.src/git-v2.31.1
% make
% sudo make install
% ls -l /usr/local/bin/git
# Confirmed

(*8) Validation => Error

% git add index.html
% git commit -m "add install memo"
% git push
git: 'remote-https' is not a git command. See 'git --help'.

I still cannot resolve this problem.
% /usr/bin/git push

OK. Normally done.

(*9) Refer to stack overflow

To get rid of (*8) error, install libcurl.

I installed libcurl like below:

% wget -q https://curl.se/download/curl-7.77.0.tar.xz
% xz -d -c curl-7.77.0.tar.xz | tar xf -
% cd curl-7.77.0
% ./configure
...
configure: error: select TLS backend(s) or disable TLS with --without-ssl.

Select from these:

  --with-amissl
  --with-bearssl
  --with-gnutls
  --with-mbedtls
  --with-mesalink
  --with-nss
  --with-openssl (also works for BoringSSL and libressl)
  --with-rustls
  --with-schannel
  --with-secure-transport
  --with-wolfssl
% ./configure --with-gnutls
% make
% make install

Again

% cd ~/git-2.31.1-1.src/git-v2.31.1
% ./configure
% make
% sudo make install
% ls -l /usr/local/bin/git

I confirmed that it was installed at that time.

% cd ~/git_test
% /usr/local/bin/git pull https://github.com/KeiHasegawa/GNU_tool
fatal: unable to access 'https://github.com/KeiHasegawa/GNU_tool/': Failed sending HTTP request
%

Message was changed but still error occured.

% /usr/bin/git pull https://github.com/KeiHasegawa/GNU_tool

above execution did not work, where /usr/bin/git had worked well
before libcurl install.

% cat y
setenv LD_LIBRARY_PATH /usr/lib
/usr/bin/git pull https://github.com/KeiHasegawa/GNU_tool
% csh -vf y
setenv LD_LIBRARY_PATH /usr/lib
/usr/bin/git pull https://github.com/KeiHasegawa/GNU_tool
From https://github.com/KeiHasegawa/GNU_tool
 * branch            HEAD       -> FETCH_HEAD
Already up-to-date.
%

OK. I could get rid of this error.

% cat y
setenv LD_LIBRARY_PATH /usr/lib
/usr/local/bin/git pull https://github.com/KeiHasegawa/GNU_tool
% csh -vf y
setenv LD_LIBRARY_PATH /usr/lib
/usr/local/bin/git pull https://github.com/KeiHasegawa/GNU_tool
From https://github.com/KeiHasegawa/GNU_tool
 * branch            HEAD       -> FETCH_HEAD
Already up-to-date.
%

And this was OK. I guessed that there was some problemn with libcurl build.

libcurl configure result were:

  Host setup:       i686-pc-linux-gnu
  Install prefix:   /usr/local
  Compiler:         gcc
   CFLAGS:          -Werror-implicit-function-declaration -O2 -Wno-system-headers -Wenum-conversion -pthread
   CPPFLAGS:        -isystem /usr/local/include -isystem /usr/local/include -isystem /usr/local/include/p11-kit-1
   LDFLAGS:         -L/usr/local/lib -L/usr/local/lib
   LIBS:            -lpsl -lnettle -lgnutls -lzstd -lz -lrt

  curl version:     7.77.0
  SSL:              enabled (GnuTLS)
  SSH:              no      (--with-{libssh,libssh2})
  zlib:             enabled
  brotli:           no      (--with-brotli)
  zstd:             enabled (libzstd)
  GSS-API:          no      (--with-gssapi)
  GSASL:            no      (libgsasl not found)
  TLS-SRP:          enabled
  resolver:         POSIX threaded
  IPv6:             enabled
  Unix sockets:     enabled
  IDN:              no      (--with-{libidn2,winidn})
  Build libcurl:    Shared=yes, Static=yes
  Built-in manual:  enabled
  --libcurl option: enabled (--disable-libcurl-option)
  Verbose errors:   enabled (--disable-verbose)
  Code coverage:    disabled
  SSPI:             no      (--enable-sspi)
  ca cert bundle:   /etc/pki/tls/certs/ca-bundle.crt
  ca cert path:     no
  ca fallback:      no
  LDAP:             no      (--enable-ldap / --with-ldap-lib / --with-lber-lib)
  LDAPS:            no      (--enable-ldaps)
  RTSP:             enabled
  RTMP:             no      (--with-librtmp)
  Metalink:         no      (--with-libmetalink)
  PSL:              enabled
  Alt-svc:          enabled (--disable-alt-svc)
  HSTS:             enabled (--disable-hsts)
  HTTP1:            enabled (internal)
  HTTP2:            no      (--with-nghttp2, --with-hyper)
  HTTP3:            no      (--with-ngtcp2, --with-quiche)
  ECH:              no      (--enable-ech)
  Protocols:        DICT FILE FTP FTPS GOPHER GOPHERS HTTP HTTPS IMAP IMAPS MQTT POP3 POP3S RTSP SMB SMBS SMTP SMTPS TELNET TFTP
  Features:         AsynchDNS HSTS HTTPS-proxy IPv6 Largefile NTLM NTLM_WB PSL SSL TLS-SRP UnixSockets alt-svc libz zstd

I had no idea. But anyway, it was clear that libcurl installed newly
did not work well. I did like below:

% sudo rm /usr/local/lib/libcurl*

There were /usr/lib/libcurl* which worked well. So it's OK.

At the first place, I just wanted to know the way of omit username and
password when I execute `git push'.

And below works well:

% git config --global credential.helper cache

15 minute avairable by default.

1 hour avairable:

% git config --global credential.helper 'cache --timeout=3600'



