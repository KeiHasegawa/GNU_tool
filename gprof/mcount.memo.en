mcount investigation

     I just compiled very simple program with `-pg' option:

% cat test001.c
void f(int n)
{
  while (--n)
    ;
}

int main()
{
  f(0x4000);
  return 0;
}
% gcc -pg test001.c -o test001
% rm -f gmon.outw
% ./test001
% ls gmon.out
gmon.out
% gprof test001 gmon.out > test001.gprof

     The same work has been done at "Introduction" on this web page.
     This sample is too simple to be interrested with, but for investigating
     `mcount'

% objdump -x test001 > test001.objdump
...
080484c4 g     F .text	00000016              f
00000000       F *UND*	00000000              __monstartup@@GLIBC_2.0
00000000       F *UND*	00000000              mcount@@GLIBC_2.0       (*) !!
00000000       F *UND*	00000000              __cxa_atexit@@GLIBC_2.1.3
0804981c g       .data	00000000              __data_start
080483c0 g     F .text	00000044              __gmon_start__
...

     As this result, `mcount' is defined at libc:
% ldd test001
	linux-gate.so.1 =>  (0xffffe000)
	libc.so.6 => /lib/libc.so.6 (0xb757f000)       (*) !!
	/lib/ld-linux.so.2 (0xb7701000)
%

     I executed `test001' under control `gdb':
(gdb) b main
Breakpoint 1 at 0x80484dd
(gdb) b f
Breakpoint 2 at 0x80484c7
(gdb) b mcount
Breakpoint 3 at 0x8048360
(gdb) run
Starting program: /home/khasegawa/lang/53_GNU_tool/gprof/test001 

Breakpoint 1, 0x080484dd in main ()
(gdb) c
Continuing.

Breakpoint 3, mcount () at ../sysdeps/i386/i386-mcount.S:35       (*) !!
35	in ../sysdeps/i386/i386-mcount.S
(gdb) c
Continuing.

Breakpoint 2, 0x080484c7 in f ()
(gdb) c
Continuing.

Breakpoint 3, mcount () at ../sysdeps/i386/i386-mcount.S:35       (*) !!
35	in ../sysdeps/i386/i386-mcount.S
(gdb) c
Continuing.
[Inferior 1 (process 4984) exited normally]
(gdb) 

       I confirmed that `i386-mcount.S' didn't exist at ~/gcc-10.2.0

       By the way, if you want to use your own `mcount', do like below:

% cat test001_0.c
#include <stdio.h>

void mcount()
{
  printf("My `mcount' called\n");
}
% gcc -pg test001.c -c
% gcc test001_0.c -c       # Don't specify `-pg' option
% gcc test001.o test001_0.o -o test001
% rm -f gmon.out
% ./test001
% ls gmon.out
gmon.out : not found. not generated.
%

   If you specify `-pg' option when compiling test001_0.c, `mcount' will
   be called recusively.

