基本ブロックプロファイル

(*1) やりたいこと
(*2) 最初のサンプル
(*3) profile_basic_block.cpp
(*4) bbprof1.cpp
(*5) bbprof2.cpp

(*1) やりたいこと

     プログラムを実行した後, 実行した行をハイライトさせた形で表示する.
     例えば, テストを行ったときに通っているところ, いないところを明白
     にできる.

(*2) 最初のサンプル

     test000.c を最初のサンプルに選んだ. これの期待値が test000.ppt
     である. 現状はとりあえず ppt 形式にしているのだが, これはいずれ web
     ブラウザなどで見られるようになるとよい. あるいは emacs などの
     エディタでハイライト機能があるのでそれもよい.

     test000.c は通常次のようにビルドされる.
     
% gcc test000.c -o test000.exe

     これとあまり変わらない形でビルドされなくてはならないが, ユーザーは
     プロファイルのために特別なビルドをしなくてはならない. 例えば通常の
     gprof を使用するためには

% gcc -pg test000.c -o test000.exe
% ./test000.exe
% gprof test000.exe gmon.out

     のようなことをする必要がある. 基本ブロックのプロファイルでは以下の
     ようにする必要がある:

% gcc -g -c test000.c --profile-basic-block
% gcc -g -c profile_basic_block.cpp
% gcc profile_basic_block.o test000.o -o test000.exe
% ./test000.exe
% ./bbprof.exe test000.exe bb.out

     --profile-basic-block オプションを使用するためには
     「基本ブロックプロファイルのための gcc の修正」を行う必要があり,
     自分でビルドした gcc を使用しなくてはならない. これはものすごく
     ハードルが高いが, ツールが完成していないのでしょうがない.

     また 2 つ目の gcc の実行時に --profile-basic-block を使用してはいけない.

     profile_basic_block.cpp は「gprof の調査」で述べた mcount に相当
     するもので, これをソースとしてあなたのプログラムに組み込むことを
     要求している. これもユーザーのビルド環境を変更するというなんとも
     醜悪な形になってしまっている.

     そして最後の bbprof.exe は自前のコマンドで, binutils を使う必要が
     ある. ビルドするには単純な binutils のインストールでは不十分で
     ソースからビルドする必要がある(かもしれない).

     ここまで聞くと, やめとこうということになるだろうが, これが
     標準になれば面倒臭いことがだいぶやらなくてよくなるかもしれない.

(*3) profile_basic_block.cpp

     この函数では, 呼び出し元のアドレスをファイルに書き込むことをしている.
     改善点はあるが現時点ではこれで十分である.

     o profile_basic_block.cpp を最適化してコンパイルすれば動作しない可能性
       がある

     o 複数スレッドを使うプログラムには対応していない

(*4) bbprof1.cpp

     最初のバージョンは, プログラム内の函数のアドレスと (*4) の機能で記録し
     たアドレスから, どの函数から呼び出されているかを表示するだけのものにした.
     本当は「ソース行のどこから」という情報が必要だが, これも現時点では十分で
     ある. ビルドの方法は以下:

 linux % g++ -o bbprof.exe -DPACKAGE bbprof1.cpp -lbfd -liberty -L/home/khasegawa/binutils-2.36.1-2.src/binutils-2.36.1/libiberty -ldl -lz

cygwin % g++ -o bbprof.exe -DPACKAGE bbprof1.cpp -lbfd -liberty -ldl -lz -lintl

(*5) bbprof2.cpp

     2 つ目のバージョンは, ファイル名と行番号を表示できるようになっている.
     addr2line というプログラムが binutils にあるが参考にした. ビルドの方法は
     bbprof1.cpp と同じである.


